{"version":3,"file":"static/js/2614.7f58c0de.chunk.js","mappings":"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","sources":["apis/RackApi.js","apis/ReqApi.js","apis/ReturnApi.js","apis/StockApi.js","features/stock/StockReturns.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js"],"sourcesContent":["import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/rack\";\r\n\r\nexport const UserApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // receiveStock: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/Receive-Stock`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    productRack: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Product-Rack`,\r\n        method: \"PUT\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    createRacks: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getRack: builder.query({\r\n      query: (arg) => {\r\n        const { reloadItems } = arg;\r\n        return {\r\n          url: `${BASE_URL}`,\r\n          method: \"GET\",\r\n          // params: { reloadItems },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getRackShelves: builder.query({\r\n      query: (arg) => {\r\n        const { reloadItems } = arg;\r\n        return {\r\n          url: `${BASE_URL}/shelves`,\r\n          method: \"GET\",\r\n          // params: { reloadItems },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getShelvesByRackId: builder.query({\r\n      query: (arg) => {\r\n        const { id } = arg;\r\n        return {\r\n          url: `${BASE_URL}/${id}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getShelves: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/shelves`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n    getProductsByRack: builder.query({\r\n      query: (arg) => {\r\n        const { RackId } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Rack-Products/${RackId}`,\r\n          method: \"GET\",\r\n          // params: { RackId },\r\n        };\r\n      },\r\n    }),\r\n\r\n    // getStoreStock: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/products`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreTaggingDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { deliveryItemId, unit } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/get-taggingDetail`,\r\n    //       method: \"GET\",\r\n    //       params: {  deliveryItemId, unit },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getTempStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-TmpStocks`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getItemDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { itemId } = arg;\r\n    //     // console.log(pageNo);\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-ItemDetails/${itemId}/`,\r\n    //       method: \"GET\",\r\n    //       // params: { pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType, pageNo } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Store-Stocks`,\r\n    //       method: \"GET\",\r\n    //       params: { userType, pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getGlobalBin: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Global-Bincard`,\r\n    //       method: \"GET\",\r\n    //       // param nas: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getBinCard: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-BinCard`,\r\n    //       method: \"GET\",\r\n    //       params: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyRiders: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyCustomers: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllTrips: builder.query({\r\n    //   query: (arg) => {\r\n    //     // const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getAllTripRequest`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllRidersForCompany: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userId } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getallriderscompany`,\r\n    //       method: \"GET\",\r\n    //       params: { userId },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    getStats: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/super-admin/userStatsChart`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default UserApi;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/req\";\r\n\r\nexport const ReqApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    confirmRelease: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/confirm-release`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    approval: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/approval`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    request: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/request`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getRequest: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getRequestDetail: builder.query({\r\n      query: (arg) => {\r\n        const { RequestCode } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Request-Detail/${RequestCode}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getReleasedStocks: builder.query({\r\n      query: (arg) => {\r\n        const { RequestCode } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Released-Stocks/${RequestCode}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n   \r\n\r\n    getTagging: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getPendingRelease: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Pending-Release`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getProcessedApprovalRequest: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Processed-Approval-Requests`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getCategories: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/category`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default ReqApi;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = '/returns'\r\n\r\nexport const ReturnApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    returnStock: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    returnIntake: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Return-Intake`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getStocksReturning: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n    // receiveStock: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/receive-stock`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    // receiveStomaterialReturnck: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/Material-Return`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n\r\n    // getStores: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getShelvesByRackId: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { id } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/${id}`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getShelves: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/shelves`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getStoreLocations: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Locations`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    \r\n\r\n    // getStoreStock: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/products`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreTaggingDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { deliveryItemId, unit } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/get-taggingDetail`,\r\n    //       method: \"GET\",\r\n    //       params: {  deliveryItemId, unit },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n\r\n    \r\n\r\n    // getTempStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-TmpStocks`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getItemDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { itemId } = arg;\r\n    //     // console.log(pageNo);\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-ItemDetails/${itemId}/`,\r\n    //       method: \"GET\",\r\n    //       // params: { pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType, pageNo } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Store-Stocks`,\r\n    //       method: \"GET\",\r\n    //       params: { userType, pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getGlobalBin: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Global-Bincard`,\r\n    //       method: \"GET\",\r\n    //       // param nas: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getBinCard: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-BinCard`,\r\n    //       method: \"GET\",\r\n    //       params: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyRiders: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyCustomers: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllTrips: builder.query({\r\n    //   query: (arg) => {\r\n    //     // const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getAllTripRequest`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllRidersForCompany: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userId } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getallriderscompany`,\r\n    //       method: \"GET\",\r\n    //       params: { userId },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStats: builder.query({\r\n    //   query: (arg) => {\r\n    //     // const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/userStatsChart`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default ReturnApi;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/stocks\";\r\n\r\nexport const StockApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // signup: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/signup`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    stockIntake: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/intake`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    stockTransferIntake: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Transfer-Intake`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    stockOutbound: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Outbound`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getIntakes: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/intakes`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default StockApi;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {\r\n  Autocomplete,\r\n  Card,\r\n  Checkbox,\r\n  TextareaAutosize,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { CheckBox } from \"@mui/icons-material\";\r\nimport ReqApi from \"apis/ReqApi\";\r\nimport StockApi from \"apis/StockApi\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport RackApi from \"apis/RackApi\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport ReturnApi from \"apis/ReturnApi\";\r\n\r\nconst StockReturns = () => {\r\n  const user = useAuthUser();\r\n  console.log(user);\r\n  const [formData, setFormData] = React.useState({\r\n    shelfCode: \"\",\r\n    productBarcode: \"\",\r\n    quantity: \"\",\r\n    comment: \"\",\r\n    requestCode: \"\",\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [TaggingId, setTaggingId] = React.useState();\r\n  const [items, setItems] = React.useState([]);\r\n  const [RequestCode, setRequestCode] = React.useState();\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  // StoreStocks\r\n  const getRacksQueryResult = RackApi.useGetRackQuery({});\r\n  const rack = getRacksQueryResult?.data || [];\r\n\r\n  const getShelvesByRackQueryResult = RackApi.useGetShelvesByRackIdQuery({\r\n    id: formData.rack,\r\n  });\r\n  const shelvesByRack = getShelvesByRackQueryResult?.data || [];\r\n\r\n  const getProductsQuery = UserApi.useGetStoreProductsQuery({ TaggingId });\r\n  const products = getProductsQuery?.data || [];\r\n\r\n  const [stockOutboundMuation, stockOutboundMutationResult] =\r\n    ReturnApi.useReturnStockMutation();\r\n\r\n  const getRequestsQueryResult = ReqApi.useGetRequestQuery({\r\n    // TaggingId,\r\n  });\r\n  const requests = getRequestsQueryResult?.data || [];\r\n\r\n  const getRequestsDetailsQueryResult = ReqApi.useGetRequestDetailQuery({\r\n    RequestCode,\r\n  });\r\n  const requestsDetails = getRequestsDetailsQueryResult?.data || [];\r\n\r\n  // setFormData({requestCode:requestsDetails?.request?.code})\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: \"\",\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: \"\",\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const dataApproval = [\r\n    { store: \"Store A\", dateCreated: \"2023-01-15\", items: 50 },\r\n    { store: \"Store B\", dateCreated: \"2023-02-10\", items: 30 },\r\n    { store: \"Store C\", dateCreated: \"2023-03-05\", items: 70 },\r\n    // Add more data entries here\r\n  ];\r\n\r\n  const postOutbound = async () => {\r\n    let payload = {\r\n      requestCode: RequestCode,\r\n      reason: +formData.reason,\r\n      note: formData.comment,\r\n      items: [\r\n        ...items,\r\n        // {\r\n        //   productId: 1373,\r\n        //   shelfId: 91,\r\n        //   quantity: 12,\r\n        // },\r\n      ],\r\n    };\r\n    // {\r\n    //   shelfCode: formData.shelfCode,\r\n    //   requestCode: requestsDetails?.request?.code,\r\n    //   comment: formData.comment,\r\n    //   items: items,\r\n    // };\r\n\r\n    console.log(payload);\r\n    try {\r\n      const data = await stockOutboundMuation({ data: payload }).unwrap();\r\n      // TODO extra login\r\n      console.log(data);\r\n      data.message\r\n        ? enqueueSnackbar(data.message, { variant: \"error\" })\r\n        : enqueueSnackbar(\"Returned successfully\", { variant: \"success\" });\r\n      // setRefreshD((orev)=>orev+1)\r\n      // redirect();\r\n    } catch (error) {\r\n      console.log(error.data);\r\n      enqueueSnackbar(error?.data, \"\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  let id = 0;\r\n  const addItem = () => {\r\n    id = id + 1;\r\n    let payload = {\r\n      id: items.length + 1,\r\n      productId: +formData.productId,\r\n      quantity: +formData.quantity,\r\n      shelfId: formData.shelfCode,\r\n    };\r\n\r\n    console.log(payload);\r\n\r\n    // {\r\n    //   productId: 1373,\r\n    //   shelfId: 91,\r\n    //   quantity: 12,\r\n    // },\r\n\r\n    let cow = [];\r\n    cow = [...cow, payload];\r\n\r\n    formData.productId && formData.quantity\r\n      ? setItems([...items, payload])\r\n      : enqueueSnackbar(\"Please make sure all fields are duefully filled\", {\r\n          variant: \"error\",\r\n        });\r\n  };\r\n  console.log(items);\r\n\r\n  const removeItem = (toremove) => {\r\n    const remove = items.filter((item) => item.id !== toremove.id);\r\n\r\n    setItems(remove);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5\" variant=\"h4\">\r\n        Stock Return\r\n      </Typography>\r\n      <div className=\"flex gap-6\">\r\n        <Card title=\"\" className=\"px-8 py-4 w-full bg-black rounded-2xl\">\r\n          <div className=\"flex gap-8\">\r\n            <form className=\"flex flex-col gap-4 w-2/5\" onSubmit={handleSubmit}>\r\n              <div>\r\n                <Typography className=\"text-white\">\r\n                  Reason for Stock Return\r\n                </Typography>\r\n                <FormControl fullWidth>\r\n                  {/* <InputLabel>Select Field</InputLabel> */}\r\n                  <Select\r\n                    className=\"bg-white\"\r\n                    name=\"reason\"\r\n                    value={formData.reason}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <select\r\n                      class=\"form-control\"\r\n                      data-val=\"true\"\r\n                      data-val-required=\"Please specify reason.\"\r\n                      id=\"Reason\"\r\n                      name=\"Reason\"\r\n                    ></select>\r\n                    <MenuItem value=\"0\">Surplus</MenuItem>\r\n                    <MenuItem value=\"1\">WrongRequest</MenuItem>\r\n                    <MenuItem value=\"2\">Faulty</MenuItem>\r\n                    <MenuItem value=\"3\">Unsable</MenuItem>\r\n                    <MenuItem value=\"4\">CriticalNeed</MenuItem>\r\n                    <MenuItem value=\"5\">Repair</MenuItem>\r\n                    <MenuItem value=\"6\">ReAllocation</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div>\r\n                <Typography className=\"text-white\">\r\n                  HQ return or Local Store Return\r\n                </Typography>\r\n                <FormControl fullWidth>\r\n                  {/* <InputLabel>Select Field</InputLabel> */}\r\n                  <Select\r\n                    className=\"bg-white\"\r\n                    name=\"store\"\r\n                    value={formData.store}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"\">Please select a destination</MenuItem>\r\n                    <MenuItem value=\"1\">HQ return</MenuItem>\r\n                    <MenuItem value=\"0\">Local Store return</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                  Select Request Code\r\n                </Typography>\r\n                <FormControl className=\"w-full\" fullWidth>\r\n                  <Select\r\n                    className=\"bg-white w-full\"\r\n                    name=\"reqCode\"\r\n                    value={formData.reqCode}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setRequestCode(e.target.value);\r\n                    }}\r\n                  >\r\n                    {requests\r\n                      ?.filter(\r\n                        (req) =>\r\n                          req.status == 6 && user?.locationId == req?.locationId\r\n                      )\r\n                      ?.map((e) => (\r\n                        <MenuItem value={e?.code}>{e?.code}</MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className=\" gap-4\">\r\n                <Typography className=\"text-white\">\r\n                  Please enter comments\r\n                </Typography>\r\n                <TextareaAutosize\r\n                  className=\"rounded p-3 text-black\"\r\n                  name=\"comment\"\r\n                  minRows={5} // Minimum number of rows to display\r\n                  maxRows={6} // Maximum number of rows to display before scrolling\r\n                  placeholder=\"Enter your text here...\"\r\n                  onChange={handleChange}\r\n                  value={formData.comment}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n              <Button onClick={postOutbound}>Post</Button>\r\n            </form>\r\n\r\n            <div className=\"flex flex-col gap-4 w-3/5\">\r\n              <Typography className=\"text-white\" variant=\"h6\">\r\n                Please select Items to return\r\n              </Typography>\r\n              <Typography className=\"text-white\">\r\n                Scanned items valid for return will be listed below. Stock items\r\n                will be listed based on destination selected. Stock will be\r\n                returned to project type it was created in.\r\n              </Typography>\r\n              <Typography className=\"text-white\">\r\n                For HQ return the item must be in the BU store with stock status\r\n                ‘In-Store’ (Items already taken into the BU store).\r\n                {/* While for\r\n                local store return, the item must be authorized (SRIN status\r\n                must have been completed) only scanned items matching this\r\n                criteria will be displayed */}\r\n              </Typography>\r\n              <div className=\"flex gap-6\">\r\n                <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Rack\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      {/* <InputLabel>Select Field</InputLabel> */}\r\n                      <Autocomplete\r\n                        className=\"m-2\"\r\n                        disablePortal\r\n                        onChange={\r\n                          (event, newValue) =>\r\n                            // handleChange(event, newValue)\r\n                            setFormData({ ...formData, rack: newValue?.id })\r\n                          // console.log(newValue)\r\n                        }\r\n                        // id=\"combo-box-demo\"\r\n                        options={rack?.map((e) => ({\r\n                          label: e?.name,\r\n                          id: e?.id,\r\n                        }))}\r\n                        sx={{ minWidth: 200 }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Shelf\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      <Autocomplete\r\n                        className=\"m-2\"\r\n                        disablePortal\r\n                        onChange={\r\n                          (event, newValue) =>\r\n                            // handleChange(event, newValue)\r\n                            setFormData({\r\n                              ...formData,\r\n                              shelfCode: newValue?.id,\r\n                            })\r\n                          // console.log(newValue)\r\n                        }\r\n                        // id=\"combo-box-demo\"\r\n                        options={(shelvesByRack?.shelves || [])?.map((e) => ({\r\n                          label: e?.label,\r\n                          id: e?.id,\r\n                        }))}\r\n                        sx={{ minWidth: 200 }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Product\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      <Select\r\n                        className=\"bg-white w-full\"\r\n                        name=\"productId\"\r\n                        value={formData.productId}\r\n                        onChange={handleChange}\r\n                      >\r\n                        {requestsDetails?.requestedItems\r\n                          // {allDeliveries\r\n                          // ?.filter((item) =>\r\n                          //   products\r\n                          //     ?.filter(\r\n                          //       (barcodedProducts) => barcodedProducts.barcode\r\n                          //     )\r\n                          //     .some(\r\n                          //       (filterItem) =>\r\n                          //         filterItem?.id === item?.productId\r\n                          //     )\r\n                          // )\r\n                          // ?.filter((prod) => prod?.barcode)\r\n                          ?.map((e) => (\r\n                            <MenuItem\r\n                              value={\r\n                                products?.find(\r\n                                  (product) => e?.name === product?.name\r\n                                )?.id\r\n                              }\r\n                            >\r\n                              {e?.name}\r\n                              {/* {\r\n                                products?.find(\r\n                                  (product) => e?.productId === product?.id\r\n                                )?.name\r\n                              } */}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                {/* <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Product\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                    <Autocomplete\r\n                      className=\"m-2\"\r\n                      disablePortal\r\n                      onChange={\r\n                        (event, newValue) =>\r\n                          // handleChange(event, newValue)\r\n                          // setFormData({ ...formData, productId: newValue?.id })\r\n                        console.log(newValue)\r\n                      }\r\n                      // id=\"combo-box-demo\"\r\n                      options={(requestsDetails?.requestedItems||[])\r\n                        ?.map((e) => ({\r\n                          label: e?.name,\r\n                          id: e?. products?.find(\r\n                            (product) => e?.name === product?.name\r\n                          )?.id,\r\n                        }))}\r\n                      sx={{ minWidth: 200 }}\r\n                      renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                     \r\n                    </FormControl>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"flex justify-between gap-8  w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Quantity\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      {/* <InputLabel>Select Field</InputLabel> */}\r\n                      <TextField\r\n                        className=\"bg-white rounded-full\"\r\n                        // label=\"Field 1\"\r\n                        name=\"quantity\"\r\n                        value={formData.quantity}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        placeholder=\"Click to input Quantity\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <Button className=\"bg-red-500  text-white\">\r\n                Remove Selected Items\r\n              </Button> */}\r\n              <Button className=\"mt-4\" onClick={addItem}>\r\n                Add\r\n              </Button>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>#</TableCell>\r\n                      <TableCell>Product Barcode</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell>Shelf</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {items.map((row, idx) => (\r\n                      <TableRow key={idx}>\r\n                        <TableCell>{idx + 1}</TableCell>\r\n                        <TableCell>\r\n                          {\r\n                            products.find(\r\n                              (product) => product.id == row.productId\r\n                            ).name\r\n                          }\r\n                        </TableCell>\r\n                        <TableCell>{row.quantity}</TableCell>\r\n                        <TableCell>\r\n                          {\r\n                            shelvesByRack?.shelves.find(\r\n                              (shelf) => shelf.id == row.shelfId\r\n                            ).label\r\n                          }\r\n                        </TableCell>\r\n\r\n                        <TableCell\r\n                          onClick={() => removeItem(row)}\r\n                          className=\"text-red-400 cursor-pointer\"\r\n                        >\r\n                          Remove\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      // <div></div>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockReturns;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["BASE_URL","SoftwrkApi","endpoints","builder","productRack","mutation","query","config","url","concat","method","createRacks","getRack","arg","reloadItems","getRackShelves","getShelvesByRackId","id","getShelves","userType","getProductsByRack","RackId","getStats","confirmRelease","approval","request","getRequest","getRequestDetail","RequestCode","getReleasedStocks","getTagging","getPendingRelease","getProcessedApprovalRequest","getCategories","returnStock","returnIntake","getStocksReturning","stockIntake","stockTransferIntake","stockOutbound","getIntakes","StockReturns","_requests$filter","_ref","_requestsDetails$requ","user","useAuthUser","console","log","formData","setFormData","React","shelfCode","productBarcode","quantity","comment","requestCode","enqueueSnackbar","useSnackbar","TaggingId","setTaggingId","items","setItems","setRequestCode","show","setShow","getRacksQueryResult","RackApi","rack","data","getShelvesByRackQueryResult","shelvesByRack","getProductsQuery","UserApi","products","stockOutboundMuation","stockOutboundMutationResult","ReturnApi","getRequestsQueryResult","ReqApi","requests","getRequestsDetailsQueryResult","requestsDetails","handleChange","event","name","value","target","_jsxs","children","_jsx","Typography","className","variant","Card","title","onSubmit","e","preventDefault","FormControl","fullWidth","Select","reason","onChange","class","MenuItem","store","reqCode","filter","req","status","locationId","map","code","TextareaAutosize","minRows","maxRows","placeholder","style","width","Button","onClick","async","payload","note","unwrap","message","error","Autocomplete","disablePortal","newValue","options","label","sx","minWidth","renderInput","params","TextField","shelves","productId","requestedItems","_products$find","find","product","addItem","length","shelfId","cow","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","idx","shelf","toremove","remove","item","removeItem","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined"],"sourceRoot":""}