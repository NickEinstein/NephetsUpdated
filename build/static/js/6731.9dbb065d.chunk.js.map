{"version":3,"file":"static/js/6731.9dbb065d.chunk.js","mappings":"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","sources":["images/dashboardBody/watermark.svg","apis/ReturnApi.js","common/DashboardCards.js","common/DashboardStatisticCard.js","common/PasswordTextField.js","apis/ApiClient.js","features/dashboard/Dashboard.js","features/dashboard/ExportToExcel.js","features/issue/IllegalMovement.js","features/issue/IssueCancellation.js","features/issue/PartialIssueance.js","features/stock/PendingStock.js","apis/VendorApi.js","features/stock/StockDeliveries.js","features/stock/StockReturns.js","apis/TaggingApi.js","features/stock/StockTagging.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgWatermark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 960,\n    height: 768,\n    viewBox: \"0 0 960 768\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M302.266 30.5206C188.492 105.913 170.861 248.473 93.8052 353.645C66.9813 390.241 32.3219 422.994 14.2386 463.592C-27.2783 556.519 29.8603 661.929 106.338 735.736C142.806 770.947 185.402 803.205 236.94 818.04C276.573 829.455 319.069 829.927 360.786 830.227L1091.66 836.175C1173.26 836.828 1263.93 834.465 1322.6 784.657C1363.04 750.358 1379.46 700.269 1393.4 652.458C1410.52 593.71 1426.05 529.909 1399.4 473.955C1368.96 409.936 1291.98 373.657 1244.16 318.416C1166.55 228.917 1168.33 93.5482 1069.51 22.0998C1023.37 -11.2469 962.485 -24.3241 903.159 -30.8627C791.318 -43.2067 685.387 -19.9056 575.547 -23.1551C481.669 -25.929 380.151 -21.0944 302.266 30.5206Z\",\n    fill: \"#E7ECFF\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgWatermark);\nexport default __webpack_public_path__ + \"static/media/watermark.1008a06930b18253692a83721bd19762.svg\";\nexport { ForwardRef as ReactComponent };","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = '/returns'\r\n\r\nexport const ReturnApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    returnStock: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    returnIntake: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Return-Intake`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getStocksReturning: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n    // receiveStock: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/receive-stock`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    // receiveStomaterialReturnck: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/Material-Return`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n\r\n    // getStores: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getShelvesByRackId: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { id } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/${id}`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getShelves: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/shelves`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getStoreLocations: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Locations`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    \r\n\r\n    // getStoreStock: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/products`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreTaggingDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { deliveryItemId, unit } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/get-taggingDetail`,\r\n    //       method: \"GET\",\r\n    //       params: {  deliveryItemId, unit },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n\r\n    \r\n\r\n    // getTempStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-TmpStocks`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getItemDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { itemId } = arg;\r\n    //     // console.log(pageNo);\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-ItemDetails/${itemId}/`,\r\n    //       method: \"GET\",\r\n    //       // params: { pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType, pageNo } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Store-Stocks`,\r\n    //       method: \"GET\",\r\n    //       params: { userType, pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getGlobalBin: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Global-Bincard`,\r\n    //       method: \"GET\",\r\n    //       // param nas: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getBinCard: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-BinCard`,\r\n    //       method: \"GET\",\r\n    //       params: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyRiders: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyCustomers: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllTrips: builder.query({\r\n    //   query: (arg) => {\r\n    //     // const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getAllTripRequest`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllRidersForCompany: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userId } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getallriderscompany`,\r\n    //       method: \"GET\",\r\n    //       params: { userId },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStats: builder.query({\r\n    //   query: (arg) => {\r\n    //     // const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/userStatsChart`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default ReturnApi;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\nimport snake from \"images/Mask group.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DashboardCards({image,text1,text2, showText, makebig}) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  \r\n  const history = useNavigate();\r\n\r\n//   const redirect = () => {\r\n//     history(\"/complete-signUp\");\r\n//   };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"relative cursor-pointer\">\r\n      <Card\r\n        className=\"bg-[#D9D9D9] rounded-3xl\"\r\n      \r\n      >\r\n      \r\n        <CardContent >\r\n        <div class=\"flex flex-col py-4\">\r\n                <div className=' flex flex-col justify-center items-center gap-1 col-span-3'>\r\n                    <img\r\n                      src={image}\r\n                      alt=\"header navigation logo\"\r\n                      className={makebig ? \"cursor-pointer w-24 \" : 'cursor-pointer w-20'}\r\n                    //   onClick={redirect}\r\n                    />\r\n                    <div className='flex flex-col text-center cursor-pointer'>\r\n                        <Typography  className='text-base text-black'>{text1}</Typography>\r\n                        {<Typography  className={`text-base text-black ${showText && 'text-[#D9D9D9]'}`}>{text2}</Typography>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n         \r\n        </CardContent>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardCards;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\nimport snake from \"images/Mask group.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DashboardStatisticsCard({text1,text2}) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  \r\n  const history = useNavigate();\r\n\r\n//   const redirect = () => {\r\n//     history(\"/complete-signUp\");\r\n//   };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"relative cursor-pointer\">\r\n      <Card\r\n        className=\" w-[190px] h-[85px] cursor-pointer\"\r\n      \r\n      >\r\n      \r\n        <CardContent >\r\n        <div class=\"flex flex-col\">\r\n                <div className=' flex flex-col justify-center items-center gap-1 col-span-3'>\r\n                   \r\n                    <div className='flex flex-col text-center cursor-pointer'>\r\n                        <Typography  className='text-xs text-black'>{text1}</Typography>\r\n                        <Typography variant=\"h4\" className='font-bold text-[#1B9EDE]'>{text2}</Typography>\r\n                        <Typography  className='text-[8px] text-[#9D9595]'>{'Total'}</Typography>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n         \r\n        </CardContent>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardStatisticsCard;\r\n","import React from \"react\";\r\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport clsx from \"clsx\";\r\n\r\n/** @param {import(\"@mui/material\").TextFieldProps} props */\r\nfunction PasswordTextField(props) {\r\n  const { error, ...rest } = props;\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\r\n\r\n  return (\r\n    <TextField\r\n      type={isVisible ? \"text\" : \"password\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleVisible}\r\n              disabled={props.disabled}\r\n            >\r\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\r\n                {isVisible ? <VisibilityOffIcon/> : <VisibilityIcon/>}\r\n              </Icon>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      error={error}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PasswordTextField;\r\n","// import { EventNote } from \"@mui/icons-material\";\r\n// import axios from \"axios\";\r\n// import Cookies from \"universal-cookie\";\r\n\r\n// const cookies = new Cookies();\r\n\r\n// export const apiClient =\r\n\r\n// axios\r\n//   .create({\r\n//   baseURL: process.env. REACT_APP_SOFTWORK_API,\r\n//     // baseURL: ,\r\n//     responseType: \"json\",\r\n//   })\r\n//   .interceptors.request.use(\r\n//     (config) => {\r\n//       console.log(\"setting up\");\r\n//       const token = cookies.get(\"token\");\r\n//       if (token != null) {\r\n//         config.headers.authorization = token;\r\n//       }\r\n//     },\r\n//     (error) => Promise.reject(error)\r\n//   );\r\n\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\nconst axiosConn = axios.create({\r\n  baseURL: process.env.REACT_APP_SOFTWORK_API,\r\n  //   baseURL: `https://localhost:43242`,\r\n});\r\nconsole.log(cookies.get(\"token\"));\r\n\r\nexport default axiosConn;\r\n\r\n// Request interceptor (Outgoing)\r\naxiosConn.interceptors.request.use(\r\n  function (config) {\r\n    // Do something before request is sent\r\n    console.log(\"Interceptor Request (Outgoing) \", config);\r\n\r\n    // config.headers.API_KEY = \"YOUR_API_KEY\";\r\n\r\n    if (cookies.get(\"token\")) {\r\n      config.headers.Authorization = `Bearer ${cookies.get(\"token\")}`;\r\n    }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor (Incoming) - Optional\r\n// axiosConn.interceptors.response.use(\r\n//   function (response) {\r\n//     // Any status code that lie within the range of 2xx cause this function to trigger\r\n\r\n//     // Response data\r\n//     console.log(\"Interceptor Response (Incoming) \", response);\r\n\r\n//     return response;\r\n//   },\r\n//   function (error) {\r\n//     // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n\r\n//     // Do something with response error\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { MdRefresh, MdOutlineSearch, MdSearch } from \"react-icons/md\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport CompanyRiderCard from \"common/CompanyRiderCard\";\r\n// import ExportTcoExcel from \"./ExportTcoExcel\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Input,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport { post, get, put } from \"services/fetch\";\r\nimport SuperAdminApi from \"apis/UserApi\";\r\n\r\nimport WarehouseSVGImage from \"images/DashboardHeaderNavsImages/Warehouse.svg\";\r\nimport InventorySVGImage from \"images/DashboardHeaderNavsImages/Inventory.svg\";\r\nimport DocumentationSVGImage from \"images/DashboardHeaderNavsImages/Documentation.svg\";\r\nimport ShipmentSVGImage from \"images/DashboardHeaderNavsImages/Shipment.svg\";\r\nimport SystemAdminSVGImage from \"images/DashboardHeaderNavsImages/SystemAdmin.svg\";\r\nimport DashboardSVGImage from \"images/DashboardHeaderNavsImages/Dashboard.svg\";\r\nimport DashboardCards from \"common/DashboardCards\";\r\nimport DashboardStatisticsCard from \"common/DashboardStatisticCard\";\r\n\r\nimport WatermarkSVGImage from \"images/dashboardBody/watermark.svg\";\r\nimport StockDeliveries from \"features/stock/StockDeliveries\";\r\nimport StockTagging from \"features/stock/StockTagging\";\r\nimport StockIntake from \"features/stock/StockIntake\";\r\nimport StockReturns from \"features/stock/StockReturns\";\r\nimport PendingStock from \"features/stock/PendingStock\";\r\nimport MaterialIssueance from \"features/issue/MaterialIssueance\";\r\nimport PartialIssuance from \"features/issue/PartialIssueance\";\r\nimport MaterialAcceptance from \"features/issue/MaterialAcceptance\";\r\nimport IssueCancellation from \"features/issue/IssueCancellation\";\r\nimport IllegalMovement from \"features/issue/IllegalMovement\";\r\nimport ExportToExcel from \"./ExportToExcel\";\r\n\r\nfunction Signup(props) {\r\n  const [userType, setUserType] = React.useState(\"\");\r\n  const [show, setshow] = React.useState(false);\r\n  const [dataType, setdataType] = React.useState(\"companies\");\r\n  const [filtered, setFiltered] = React.useState([]);\r\n\r\n  //  const getUserStatsQueryResult = UserApi.useGetStatsQuery();\r\n  //  console.log(getUserStatsQueryResult);\r\n  //  const userStats = getUserStatsQueryResult?.data?.data;\r\n  // const getStoreProductsQueryResult = UserApi.useGetStoreProductsQuery({});\r\n  // const storeProducts = getStoreProductsQueryResult?.data;\r\n\r\n  // console.log(getStoreProductsQueryResult)\r\n\r\n  // console.log(companyStatistics);\r\n  // const getAllRIderQueryResult = UserApi.useGetAllQuery({ userType: \"rider\" });\r\n  // const totalRiders = getAllRIderQueryResult?.data?.data;\r\n\r\n  // const getAllCompanyQueryResult = UserApi.useGetAllQuery({\r\n  //   userType: \"company\",\r\n  // });\r\n  // const totalCompanies = getAllCompanyQueryResult?.data?.data;\r\n\r\n  // const getAllCustomerQueryResult = UserApi.useGetAllQuery({\r\n  //   userType: \"customer\",\r\n  // });\r\n  // const totalCustomers = getAllCustomerQueryResult?.data?.data;\r\n\r\n  //  console.log(getAllQueryResult.data.data);\r\n\r\n  const history = useNavigate();\r\n\r\n  // const redirect = () => {\r\n  //   history(\"/complete-signUp\");\r\n  // };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        className=\"absolute h-[89vh] w-[67%] right-0 bottom-0 \"\r\n        src={WatermarkSVGImage}\r\n      />\r\n\r\n      {/* <ExportToExcel /> */}\r\n      <div className=\"overflow-x-scroll flex gap-6 pt-3 mb-3 z-10 hide-scrollbar rounded px-3 bg-slate-400\">\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Warehouses\" text2=\"0\" />\r\n        </div>\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Stock Items\" text2=\"0\" />\r\n        </div>\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Users\" text2=\"0\" />\r\n        </div>\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Purchase Orders\" text2=\"0\" />\r\n        </div>\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Pending Approvals\" text2=\"0\" />\r\n        </div>\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Sgipment Orders\" text2=\"0\" />\r\n        </div>\r\n        <div>\r\n          <DashboardStatisticsCard text1=\"Dashboard\" text2=\"0\" />\r\n        </div>\r\n      </div>\r\n      <div className=\" flex justify-center items-center min-h-[20vh] w-full\">\r\n        <div class=\"grid  w-[70%] grid-cols-12 gap-12\">\r\n          <div class=\"col-span-4\">\r\n            {\" \"}\r\n            <Link to={RouteEnum.WAREHOUSE}>\r\n              <DashboardCards\r\n                image={WarehouseSVGImage}\r\n                text1=\"Warehouse\"\r\n                text2=\"Management\"\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div class=\"col-span-4\">\r\n            <Link to={RouteEnum.INVENTORY}>\r\n              <DashboardCards\r\n                image={InventorySVGImage}\r\n                text1=\"Inventory\"\r\n                text2=\"Management\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div class=\"col-span-4\">\r\n            <Link to={RouteEnum.SHIPMENT}>\r\n              <DashboardCards\r\n                image={ShipmentSVGImage}\r\n                text1=\"Shipment\"\r\n                text2=\"Management\"\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div class=\"col-span-4\">\r\n            <Link to={RouteEnum.SYSTEM_ADMIN}>\r\n              {\" \"}\r\n              <DashboardCards\r\n                image={SystemAdminSVGImage}\r\n                text1=\"System\"\r\n                text2=\"Admin\"\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div class=\"col-span-4\">\r\n            <Link to={RouteEnum.DASHBOARD_REPORTS}>\r\n              {\" \"}\r\n              <DashboardCards\r\n                image={DashboardSVGImage}\r\n                text1=\"Dashboards & Reports\"\r\n                text2=\"Admin\"\r\n              />{\" \"}\r\n            </Link>\r\n          </div>\r\n\r\n          <div class=\"col-span-4\">\r\n            <Link to={RouteEnum.DOCUMENTATION_SUPPORT}>\r\n              <DashboardCards\r\n                image={DocumentationSVGImage}\r\n                text1=\"Documentation &\"\r\n                text2=\"Support\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <StockDeliveries />\r\n      <StockTagging />\r\n\r\n      <StockIntake />\r\n      <StockReturns />\r\n      <PendingStock />\r\n      <MaterialIssueance/>\r\n      <PartialIssuance/>\r\n      <MaterialAcceptance/>\r\n      <IssueCancellation/>\r\n      <IllegalMovement/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","// import React from \"react\";\r\n// import { CSVLink } from \"react-csv\";\r\n\r\n// const ExportToExcel = () => {\r\n//   const data = [\r\n//     // Bold headers row\r\n//     [\r\n//       { value: \"Name\", style: { bold: true } },\r\n//       { value: \"Age\", style: { bold: true } },\r\n//       { value: \"Country\", style: { bold: true } },\r\n//     ],\r\n//     // Data rows\r\n//     [\"John Doe\", 25, \"USA\"],\r\n//     [\"Jane Smith\", 30, \"Canada\"],\r\n//     // Add more rows as needed\r\n//   ];\r\n\r\n//   const excelTitle = \"My Excel Sheet\";\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Export Data to Excel</h1>\r\n//       <table>\r\n//         <tbody>\r\n//           {data.map((row, index) => (\r\n//             <tr key={index}>\r\n//               {row.map((cell, cellIndex) => (\r\n//                 <td key={cellIndex} style={cell.style}>\r\n//                   {cell.value}\r\n//                 </td>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       <CSVLink data={data} filename={\"exported-data.csv\"} target=\"_blank\">\r\n//         {excelTitle}\r\n//       </CSVLink>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExportToExcel;\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\n// import { Table, Button } from 'antd';\r\n// import { ExcelOutlined } from '@ant-design/icons';\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst ExportToExcel = ({ data, header }) => {\r\n  // Sample data for the Ant Design table\r\n  let dataSource = [];\r\n  // { key: \"1\", name: \"John Doe\", age: 25, country: \"USA\" },\r\n  // { key: \"2\", name: \"Jane Smith\", age: 30, country: \"Canada\" },\r\n  // Add more data as needed\r\n\r\n  //   console.log(data);\r\n\r\n  useEffect(() => {\r\n    // console.log(data);\r\n    dataSource = data;\r\n  }, [data]);\r\n\r\n  // Columns configuration for the Ant Design table\r\n  const columns = header.map((e) => ({\r\n    title: e?.toUpperCase(),\r\n    dataIndex: e.toLowerCase(),\r\n    key: e,\r\n  }));\r\n\r\n  // { title: \"Age\", dataIndex: \"age\", key: \"age\" },\r\n  // { title: \"Country\", dataIndex: \"country\", key: \"country\" },\r\n  // Add more columns as needed\r\n\r\n  const exportToExcel = () => {\r\n    // Create a worksheet with bold headers\r\n    const ws = XLSX.utils.aoa_to_sheet([\r\n      columns.map((column) => ({\r\n        t: \"s\",\r\n        v: column.title,\r\n        s: { font: { bold: true } },\r\n      })),\r\n      ...dataSource.map((record) =>\r\n        columns.map((column) => record[column.dataIndex])\r\n      ),\r\n    ]);\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n    XLSX.writeFile(wb, \"exported-data.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    \r\n\r\n      <Button type=\"primary\" onClick={exportToExcel}>\r\n        Export to Excel\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportToExcel;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Card, Checkbox, Typography } from \"@mui/material\";\r\n\r\nconst IllegalMovement = () => {\r\n  const [formData, setFormData] = React.useState({\r\n    field1: \"\",\r\n    field2: \"\",\r\n    field3: \"\",\r\n    field4: \"\",\r\n    field5: \"\",\r\n    field6: \"\",\r\n    selectField: \"\",\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: <Checkbox />,\r\n      column2: \"Value 2\",\r\n      column3: \"Value 3\",\r\n      column4: \"Value 4\",\r\n      column5: \"Value 5\",\r\n      column6: \"Value 5\",\r\n      column7: \"Value 5\",\r\n      column8: <Button className=\"bg-[#2BDF27]\">Releases</Button>,\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: <Checkbox />,\r\n      column2: \"Value 7\",\r\n      column3: \"Value 8\",\r\n      column4: \"Value 9\",\r\n      column5: \"Value 10\",\r\n      column6: \"Value 5\",\r\n      column7: \"Value 5\",\r\n      column8: <Button className=\"bg-[#2BDF27]\">Releases</Button>,\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5 \" variant=\"h4\">\r\n        Illegal Movement Chart\r\n      </Typography>\r\n      <div className=\"flex flex-col gap-6 items-start\">\r\n        <Card\r\n          title=\"\"\r\n          className=\"px-8 py-4 w-full bg-black rounded-2xl flex flex-col gap-6 items-start text-white\"\r\n        >\r\n          <div className=\"w-full gap-8 flex items-center\">\r\n            <div className=\"  \">\r\n              <Typography>From</Typography>\r\n\r\n              <TextField className=\"bg-white\" />\r\n            </div>\r\n            <div className=\"  \">\r\n              <Typography>To</Typography>\r\n\r\n              <TextField className=\"bg-white\" />\r\n            </div>\r\n            <div className=\"  \">\r\n              <Typography>Tag Code</Typography>\r\n\r\n              <TextField className=\"bg-white\" />\r\n            </div>\r\n\r\n            <div>\r\n              <Typography className=\"text-black\">Tag Code</Typography>\r\n\r\n              <Button className=\"bg-[#1B9EDE] text-white flex\">Show</Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            {/* <Button>Csv</Button> */}\r\n            <Button>Excel</Button>\r\n            <Button className=\"ml-4\">PDF</Button>\r\n          </div>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"font-bold\">Code</TableCell>\r\n                  <TableCell className=\"font-bold\">Remark</TableCell>\r\n                  <TableCell className=\"font-bold\">Request by</TableCell>\r\n                  <TableCell className=\"font-bold\">Date</TableCell>\r\n                  <TableCell className=\"font-bold\">\r\n                    Releasing Warehouse\r\n                  </TableCell>\r\n                  <TableCell className=\"font-bold\">Total Items</TableCell>\r\n                  <TableCell className=\"font-bold\">Total Quantity</TableCell>\r\n                  <TableCell className=\"font-bold\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    {/* <TableCell>{row.column1}</TableCell>\r\n                    <TableCell>{row.column2}</TableCell>\r\n                    <TableCell>{row.column3}</TableCell>\r\n                    <TableCell>{row.column4}</TableCell>\r\n                    <TableCell>{row.column5}</TableCell>\r\n                    <TableCell>{row.column6}</TableCell>\r\n                    <TableCell>{row.column7}</TableCell>\r\n                    <TableCell>{row.column8}</TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <div className=\"flex items-center mt-12 self-end\">\r\n            <Button>First</Button>\r\n            <Button>Prev</Button>\r\n            <Button>Next</Button>\r\n            <Button>Last</Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IllegalMovement;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Card, Checkbox, Typography } from \"@mui/material\";\r\n\r\nconst IssueCancellation = () => {\r\n  const [formData, setFormData] = React.useState({\r\n    field1: \"\",\r\n    field2: \"\",\r\n    field3: \"\",\r\n    field4: \"\",\r\n    field5: \"\",\r\n    field6: \"\",\r\n    selectField: \"\",\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: <Checkbox />,\r\n      column2: \"Value 2\",\r\n      column3: \"Value 3\",\r\n      column4: \"Value 4\",\r\n      column5: \"Value 5\",\r\n      column6: \"Value 5\",\r\n      column7: \"Value 5\",\r\n      column8: <Button className=\"bg-[#2BDF27]\">Releases</Button>,\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: <Checkbox />,\r\n      column2: \"Value 7\",\r\n      column3: \"Value 8\",\r\n      column4: \"Value 9\",\r\n      column5: \"Value 10\",\r\n      column6: \"Value 5\",\r\n      column7: \"Value 5\",\r\n      column8: <Button className=\"bg-[#2BDF27]\">Releases</Button>,\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5 \" variant=\"h4\">\r\n        Issuance Cancellation\r\n      </Typography>\r\n      <div className=\"flex flex-col gap-6 items-start\">\r\n        <Card\r\n          title=\"\"\r\n          className=\"px-8 py-4 w-full bg-black rounded-2xl flex flex-col gap-6 items-start text-white\"\r\n        >\r\n          <div className=\"w-full flex justify-between items-center\">\r\n            <div class=\"flex gap-2 items-center\">\r\n              <Button className=\"bg-[#2BDF27] text-white flex\">\r\n                Reverse selected Release\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"flex gap-2 items-center \">\r\n              <Typography>Search</Typography>\r\n\r\n              <TextField className=\"bg-white\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <Button>Csv</Button>\r\n            <Button>Excel</Button>\r\n            <Button className=\"ml-4\">PDF</Button>\r\n          </div>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"font-bold\">Code</TableCell>\r\n                  <TableCell className=\"font-bold\">Remark</TableCell>\r\n                  <TableCell className=\"font-bold\">Request by</TableCell>\r\n                  <TableCell className=\"font-bold\">Date</TableCell>\r\n                  <TableCell className=\"font-bold\">\r\n                    Releasing Warehouse\r\n                  </TableCell>\r\n                  <TableCell className=\"font-bold\">Total Items</TableCell>\r\n                  <TableCell className=\"font-bold\">Total Quantity</TableCell>\r\n                  <TableCell className=\"font-bold\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    {/* <TableCell>{row.column1}</TableCell>\r\n                    <TableCell>{row.column2}</TableCell>\r\n                    <TableCell>{row.column3}</TableCell>\r\n                    <TableCell>{row.column4}</TableCell>\r\n                    <TableCell>{row.column5}</TableCell>\r\n                    <TableCell>{row.column6}</TableCell>\r\n                    <TableCell>{row.column7}</TableCell>\r\n                    <TableCell>{row.column8}</TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <div className=\"flex items-center mt-12 self-end\">\r\n            <Button>First</Button>\r\n            <Button>Prev</Button>\r\n            <Button>Next</Button>\r\n            <Button>Last</Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueCancellation;\r\n","import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Card, Typography } from '@mui/material';\r\n\r\nconst PartialIssuance = () => {\r\n  const [formData, setFormData] = React.useState({\r\n    field1: '',\r\n    field2: '',\r\n    field3: '',\r\n    field4: '',\r\n    field5: '',\r\n    field6: '',\r\n    selectField: '',\r\n  });\r\n\r\n  const data = [\r\n    { id: 1, column1: 'Value 1', column2: 'Value 2', column3: 'Value 3', column4: 'Value 4', column5: 'Value 5' , column6: 'Value 5' },\r\n    { id: 2, column1: 'Value 6', column2: 'Value 7', column3: 'Value 8', column4: 'Value 9', column5: 'Value 10', column6: 'Value 5'  },\r\n    // Add more data as needed\r\n  ];\r\n\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Typography className='text-center font-bold my-5' variant='h4'>Partial Issueance</Typography>\r\n        <div className=' gap-6'>\r\n            <Card  className='px-8 py-4 w-full bg-black text-white rounded-2xl'>\r\n                 <form className='flex flex-col gap-4' onSubmit={handleSubmit}>\r\n                \r\n              <div className='w-2/3 mb-6'>\r\n              <div className='mb-6'>\r\n                <Typography>Pending Release Item</Typography>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Select Field</InputLabel>\r\n                    <Select\r\n                      className='bg-white'\r\n                      name=\"selectField\"\r\n                      value={formData.selectField}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"option1\">Option 1</MenuItem>\r\n                      <MenuItem value=\"option2\">Option 2</MenuItem>\r\n                      <MenuItem value=\"option3\">Option 3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n              </div>\r\n              <div>\r\n                <Typography>Select Parent Stock</Typography>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Select Field</InputLabel>\r\n                    <Select\r\n                      className='bg-white'\r\n                      name=\"selectField\"\r\n                      value={formData.selectField}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"option1\">Option 1</MenuItem>\r\n                      <MenuItem value=\"option2\">Option 2</MenuItem>\r\n                      <MenuItem value=\"option3\">Option 3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n              </div>\r\n              <div className='w-2/4 mt-6'>\r\n                <Typography>Quantity</Typography>\r\n                <TextField\r\n                  className='bg-white rounded-full'\r\n\r\n                // label=\"Field 6\"\r\n                name=\"field6\"\r\n                value={formData.field6}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              </div>\r\n              </div>\r\n      \r\n             \r\n             \r\n              <div className='flex gap-3 w-full justify-start mt-12'>\r\n                  <Button className='bg-[#2BDF27]' type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Process\r\n                  </Button>\r\n              </div>\r\n            </form>\r\n            </Card>\r\n           \r\n        \r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartialIssuance;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Card, Checkbox, Typography } from \"@mui/material\";\r\n\r\nconst PendingStock = () => {\r\n  const [formData, setFormData] = React.useState({\r\n    field1: \"\",\r\n    field2: \"\",\r\n    field3: \"\",\r\n    field4: \"\",\r\n    field5: \"\",\r\n    field6: \"\",\r\n    selectField: \"\",\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: <Checkbox />,\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: <Checkbox />,\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5\" variant=\"h4\">\r\n        Pending Stock\r\n      </Typography>\r\n      <div className=\"flex flex-col gap-6 items-start\">\r\n        <Card\r\n          title=\"\"\r\n          className=\"px-8 py-4 w-full bg-black rounded-2xl flex flex-col gap-6 items-start\"\r\n        >\r\n          <Button className=\"bg-red-500 text-white flex\">\r\n            Delete Selected Items\r\n          </Button>\r\n\r\n          <div className=\"flex items-center\">\r\n            <Button>Csv</Button>\r\n            <Button>Excel</Button>\r\n            <Button className=\"ml-4\">PDF</Button>\r\n\r\n            {/* */}\r\n          </div>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <Checkbox />\r\n                  </TableCell>\r\n                  <TableCell className=\"font-bold text-base\">Code</TableCell>\r\n                  <TableCell className=\"font-bold text-base\">\r\n                    Item Detail\r\n                  </TableCell>\r\n                  <TableCell className=\"font-bold text-base\">Waybill</TableCell>\r\n                  <TableCell className=\"font-bold text-base\">\r\n                    Unit Per Pack\r\n                  </TableCell>\r\n                  <TableCell className=\"font-bold text-base\">Total</TableCell>\r\n                  <TableCell className=\"font-bold text-base\">Tag</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell>{row.column1}</TableCell>\r\n                    <TableCell>{row.column2}</TableCell>\r\n                    <TableCell>{row.column2}</TableCell>\r\n                    <TableCell>{row.column3}</TableCell>\r\n                    <TableCell>{row.column4}</TableCell>\r\n                    <TableCell>{row.column5}</TableCell>\r\n                    <TableCell>{row.column6}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <div className=\"flex items-center mt-12 self-end\">\r\n            <Button>First</Button>\r\n            <Button>Prev</Button>\r\n            <Button>Next</Button>\r\n            <Button>Last</Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PendingStock;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/vendors\";\r\n\r\nexport const VwndorApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // signup: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/signup`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    // stockDelivery: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/add-delivery-Item`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n\r\n    getVendors: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getCategories: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/category`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n    getAllBikes: builder.query({\r\n      query: (arg) => {\r\n        const { pageNo } = arg;\r\n        console.log(pageNo);\r\n        return {\r\n          url: `${BASE_URL}/company/bikes`,\r\n          method: \"GET\",\r\n          params: { pageNo },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAll: builder.query({\r\n      query: (arg) => {\r\n        const { userType, pageNo } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getalluser`,\r\n          method: \"GET\",\r\n          params: { userType, pageNo },\r\n        };\r\n      },\r\n    }),\r\n    getAllVerified: builder.query({\r\n      query: (arg) => {\r\n        const { userType, verified, pageNo } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getBothVerifiedUnverifiedUsers`,\r\n          method: \"GET\",\r\n          params: { userType, verified },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAllCompanyRiders: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getalluser`,\r\n          method: \"GET\",\r\n          params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAllCompanyCustomers: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getalluser`,\r\n          method: \"GET\",\r\n          params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAllTrips: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/super-admin/getAllTripRequest`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    // getAllRidersForCompany: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userId } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getallriderscompany`,\r\n    //       method: \"GET\",\r\n    //       params: { userId },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    getStats: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/super-admin/userStatsChart`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default VwndorApi;\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport DatePicker from \"react-datepicker\";\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n// import {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\n\r\n// import { DatePicker  } from \"@mui/x-date-pickers\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Autocomplete, Card, Typography } from \"@mui/material\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport DeliveryApi from \"apis/DeliveryApi\";\r\nimport VendorApi from \"apis/VendorApi\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst StockDeliveries = () => {\r\n  const [refreshD, setRefreshD] = useState(0);\r\n  const [itemz, setItemz] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const getStoreProductsQueryResult = UserApi.useGetStoreProductsQuery({});\r\n  const products = getStoreProductsQueryResult?.data;\r\n\r\n  const getTempDeliveriesQueryResult = DeliveryApi.useGetTempDeliveriesQuery({\r\n    refreshD,\r\n  });\r\n  const tempDeliveries = getTempDeliveriesQueryResult?.data;\r\n  console.log(tempDeliveries);\r\n\r\n  const getVendorQueryResult = VendorApi.useGetVendorsQuery({});\r\n  const vendor = getVendorQueryResult?.data;\r\n  console.log(vendor);\r\n\r\n  const [stockDeliveryMuation, stockDeliveryMutationResult] =\r\n    DeliveryApi.useStockDeliveryMutation();\r\n\r\n  const [stockDiscardMuation, stockDiscardMutationResult] =\r\n    DeliveryApi.useDiscardMutation();\r\n\r\n  const [finalDeliveryMuation, finalDeliveryMutationResult] =\r\n    DeliveryApi.useFinalDeliveryMutation();\r\n\r\n  const [formData, setFormData] = useState({\r\n    userId: 0,\r\n    productId: null,\r\n    unitCost: \"\",\r\n    quantity: \"\",\r\n    waybill: \"\",\r\n    workOrder: \"\",\r\n    vendorId: \"\",\r\n  });\r\n  const [newValue, setNewValue] = useState();\r\n  const [newValueProduct, setNewValueProduct] = useState(null);\r\n\r\n  const redirect = useNavigate();\r\n\r\n  const postDelivery = async () => {\r\n    setIsLoading(true);\r\n    let payload = {\r\n      // id: 0,\r\n      ...formData,\r\n\r\n      userId: 0,\r\n      productId: +formData.productId,\r\n      unitCost: +formData.unitCost,\r\n      quantity: +formData.quantity,\r\n    };\r\n\r\n    if (itemz.find((e) => e?.productId == formData.productId)) {\r\n      enqueueSnackbar(\"Item already Exists on your list\", { variant: \"error\" });\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(false);\r\n\r\n      setItemz([\r\n        ...itemz,\r\n        {\r\n          productName: newValueProduct.label,\r\n          productId: +formData.productId,\r\n          unitCost: +formData.unitCost,\r\n          quantity: +formData.quantity,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    console.log(payload);\r\n    setFormData({\r\n      userId: 0,\r\n      productId: \"\",\r\n      unitCost: \"\",\r\n      quantity: \"\",\r\n      // waybill: \"\",\r\n      // workOrder: \"\",\r\n      // vendorId: \"\",\r\n    });\r\n\r\n    setNewValueProduct(null);\r\n    // try {\r\n    //   const data = await stockDeliveryMuation({ data: payload }).unwrap();\r\n    //   // TODO extra login\r\n    //   // console.log(data.data);\r\n    //   enqueueSnackbar(\"Added Successfully\", { variant: \"success\" });\r\n    //   setRefreshD((orev) => orev + 1);\r\n    //   setFormData({\r\n    //     userId: 0,\r\n    //     productId: \"\",\r\n    //     unitCost: \"\",\r\n    //     quantity: \"\",\r\n    //     waybill: \"\",\r\n    //     workOrder: \"\",\r\n    //     vendorId: \"\",\r\n    //   });\r\n    //   // redirect();\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    //   enqueueSnackbar(\r\n    //     error.data.title || \"Please make sure all fields were properly entered\",\r\n    //     \"Please make sure all fields were properly entered\",\r\n    //     {\r\n    //       variant: \"error\",\r\n    //     }\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  const discardDelivery = async () => {\r\n    let payload = {\r\n      // id: 0,\r\n      ...formData,\r\n\r\n      userId: 0,\r\n      productId: +formData.productId,\r\n      unitCost: +formData.unitCost,\r\n      quantity: +formData.quantity,\r\n    };\r\n\r\n    console.log(payload);\r\n    try {\r\n      const data = await stockDiscardMuation().unwrap();\r\n      // TODO extra login\r\n      // console.log(data.data);\r\n      enqueueSnackbar(\"Discarded Successfully\", { variant: \"success\" });\r\n      setRefreshD((orev) => orev + 1);\r\n      setFormData({\r\n        userId: 0,\r\n        productId: \"\",\r\n        unitCost: \"\",\r\n        quantity: \"\",\r\n        waybill: \"\",\r\n        workOrder: \"\",\r\n        vendorId: \"\",\r\n      });\r\n      // redirect();\r\n    } catch (error) {\r\n      enqueueSnackbar(error.data.title, \"Failed\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const startDelivery = async () => {\r\n    setIsLoading(true);\r\n\r\n    let payload = {\r\n      // id: 0,\r\n      ...formData,\r\n\r\n      id: 0,\r\n      userId: 0,\r\n      date: newValue,\r\n      waybill: formData.waybill,\r\n      workOrderNo: formData.workOrder,\r\n      purchaseId: null,\r\n      vendorId: formData.vendorId,\r\n      items: [...itemz],\r\n    };\r\n\r\n    if (\r\n      newValue &&\r\n      formData?.waybill &&\r\n      formData?.workOrder &&\r\n      formData?.vendorId &&\r\n      itemz.length > 0\r\n    ) {\r\n      try {\r\n        const data = await finalDeliveryMuation({ data: payload }).unwrap();\r\n        // TODO extra login\r\n        // console.log(data.data);\r\n        setIsLoading(false);\r\n\r\n        enqueueSnackbar(\"Delivery Posted\", { variant: \"success\" });\r\n        setFormData({\r\n          userId: 0,\r\n          productId: \"\",\r\n          unitCost: \"\",\r\n          quantity: \"\",\r\n          waybill: \"\",\r\n          workOrder: \"\",\r\n          vendorId: \"\",\r\n        });\r\n\r\n        redirect(\"/delivery-report\");\r\n      } catch (error) {\r\n        console.log(error.data.title);\r\n        setIsLoading(false);\r\n\r\n        enqueueSnackbar(\r\n          error.data.title ||\r\n            \"Please make sure all fields were properly entered\",\r\n          \"Please make sure all fields were properly entered\",\r\n          \"Failed\",\r\n          {\r\n            variant: \"error\",\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      enqueueSnackbar(\"Please Properly input data\", { variant: \"error\" });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const data = [\r\n    // {\r\n    //   id: 1,\r\n    //   column1: \"mixer tap\",\r\n    //   column2: \"10\",\r\n    //   column3: \"1000\",\r\n    //   column4: \"10,000\",\r\n    //   column5: \"\",\r\n    //   // column6: \"mixer tap 5\",\r\n    // },\r\n    // {\r\n    //   id: 2,\r\n    //   column1: \"Tonardo Nail\",\r\n    //   column2: \"2000\",\r\n    //   column3: \"100\",\r\n    //   column4: \"20000,\",\r\n    //   column5: \"\",\r\n    //   // column6: \"mixer tap 5\",\r\n    // },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission with formData\r\n  };\r\n  const toDeleteProduct = (id) => {\r\n    let temp = itemz?.filter((e) => e?.productId !== id);\r\n    setItemz(temp);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5\" variant=\"h4\">\r\n        Stock Deliveries\r\n      </Typography>\r\n      <div className=\"flex gap-6\">\r\n        <Card title=\"\" className=\"px-8 py-4 w-1/3 bg-black rounded-2xl\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            className=\"font-bold text-center\"\r\n          ></Typography>\r\n          <form className=\"flex flex-col gap-4\" onSubmit={handleSubmit}>\r\n            <FormControl fullWidth>\r\n              <label className=\"text-white\">Select Product</label>\r\n              <Autocomplete\r\n                className=\"m-2\"\r\n                disablePortal\r\n                value={newValueProduct}\r\n                onChange={(event, newValue) =>\r\n                  // handleChange(event, newValue)\r\n                  {\r\n                    setFormData({ ...formData, productId: newValue?.id });\r\n                    setNewValueProduct(newValue);\r\n                  }\r\n                }\r\n                // id=\"combo-box-demo\"\r\n                options={products?.map((e) => ({\r\n                  label: e?.name,\r\n                  id: e?.id,\r\n                }))}\r\n                sx={{ minWidth: 200 }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n              {/* <Select\r\n                square\r\n                className=\"bg-white\"\r\n                name=\"productId\"\r\n                value={formData.productId}\r\n                onChange={handleChange}\r\n              >\r\n                {products?.map((item) => (\r\n                  <MenuItem key={item?.id} value={item?.id}>\r\n                    {item?.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select> */}\r\n            </FormControl>\r\n            <div className=\"flex gap-4\">\r\n              <TextField\r\n                className=\"bg-white rounded-full\"\r\n                // label=\"Field 1\"\r\n                name=\"quantity\"\r\n                value={formData.quantity}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                placeholder=\"Click to input Quantity\"\r\n              />\r\n              <TextField\r\n                className=\"bg-white rounded-full\"\r\n                // label=\"Field 2\"\r\n                name=\"unitCost\"\r\n                value={formData.unitCost}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                placeholder=\"Click to input Cost\"\r\n              />\r\n              {/* <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                <DatePicker\r\n                  label=\"Controlled picker\"\r\n                  value={newValue}\r\n                  onChange={(newValue) => setNewValue(newValue)}\r\n                />\r\n              </LocalizationProvider> */}\r\n            </div>\r\n            <div className=\"w-full flex justify-center\">\r\n              <Button onClick={postDelivery}>Add New Item</Button>\r\n            </div>\r\n            <div>\r\n              {/* <TextField\r\n                className=\"bg-white rounded-full\"\r\n                // label=\"Field 3\"\r\n                name=\"field3\"\r\n                value={formData.field3}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              /> */}\r\n              <div>\r\n                <DatePicker\r\n                  className=\"h-30\"\r\n                  selected={newValue}\r\n                  onChange={(newValue) => setNewValue(newValue)}\r\n                />\r\n              </div>\r\n\r\n              <label className=\"text-white\">Delivery Date</label>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className=\"bg-white rounded-full\"\r\n                // label=\"Field 4\"\r\n                name=\"waybill\"\r\n                value={formData.waybill}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              <label className=\"text-white\">Waybill</label>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className=\"bg-white rounded-full\"\r\n                // label=\"Field 5\"\r\n                name=\"workOrder\"\r\n                value={formData.workOrder}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              <label className=\"text-white\">Work Order No.</label>\r\n            </div>\r\n            <div>\r\n              <FormControl fullWidth>\r\n                <Autocomplete\r\n                  className=\"m-2\"\r\n                  disablePortal\r\n                  onChange={\r\n                    (event, newValue) =>\r\n                      // handleChange(event, newValue)\r\n                      setFormData({ ...formData, vendorId: newValue?.id })\r\n                    // console.log(newValue)\r\n                  }\r\n                  // id=\"combo-box-demo\"\r\n                  options={vendor?.map((e) => ({\r\n                    label: e?.name,\r\n                    id: e?.id,\r\n                  }))}\r\n                  sx={{ minWidth: 200 }}\r\n                  renderInput={(params) => <TextField {...params} />}\r\n                />\r\n                {/* <Select\r\n                  square\r\n                  className=\"bg-white\"\r\n                  name=\"vendorId\"\r\n                  value={formData.vendorId}\r\n                  onChange={handleChange}\r\n                >\r\n                  {vendor?.map((item) => (\r\n                    <MenuItem key={item?.id} value={item?.id}>\r\n                      {item?.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select> */}\r\n              </FormControl>\r\n              <label className=\"text-white\">Vendor</label>\r\n            </div>\r\n\r\n            {\r\n              <div className=\"flex gap-3 w-full justify-center\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  // color=\"primary\"\r\n                  className=\"p-3 w-full bg-[#2BDF27] flex justify-center gap-9 items-center text-base mb-6\"\r\n                  onClick={startDelivery}\r\n                  // onClick={() => localStorage.setItem('type', 'CLIENT')}\r\n                  // className=' '\r\n                >\r\n                  {isLoading && (\r\n                    <div class=\"flex items-center justify-center\">\r\n                      <div class=\"border-t-4 border-white border-solid rounded-full animate-spin h-4 w-4\"></div>\r\n                    </div>\r\n                  )}\r\n                  Post Delivery\r\n                </Button>\r\n                {/* <Button className=\"bg-[#DE1B32]\">Discard Delivery</Button> */}\r\n              </div>\r\n            }\r\n          </form>\r\n        </Card>\r\n        <Card title=\"\" className=\"px-8 py-4 w-2/3 bg-black rounded-2xl\">\r\n          <Button\r\n            onClick={() => setItemz([])}\r\n            className=\"bg-red-500 text-white font-bold text-base mb-4\"\r\n          >\r\n            Discard Delivery\r\n          </Button>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow className=\"font-bold\">\r\n                  <TableCell className=\"font-bold\">Product </TableCell>\r\n                  <TableCell className=\"font-bold\">Quantity</TableCell>\r\n                  <TableCell className=\"font-bold\">Unit Cost</TableCell>\r\n                  <TableCell className=\"font-bold\">Action</TableCell>\r\n                  {/* <TableCell className=\"font-bold\">Remove</TableCell> */}\r\n                  {/* <TableCell>Column 6</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {itemz?.map((row) => (\r\n                  <TableRow key={row.productId}>\r\n                    <TableCell>{row.productName}</TableCell>\r\n                    <TableCell>{row.quantity}</TableCell>\r\n                    <TableCell>{row.unitCost}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        onClick={() => {\r\n                          toDeleteProduct(row.productId);\r\n                        }}\r\n                        className=\"text-white font-bold bg-red-500\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                    {/* <TableCell>{row.column5}</TableCell> */}\r\n                    {/* <TableCell>{row.column6}</TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDeliveries;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {\r\n  Autocomplete,\r\n  Card,\r\n  Checkbox,\r\n  TextareaAutosize,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { CheckBox } from \"@mui/icons-material\";\r\nimport ReqApi from \"apis/ReqApi\";\r\nimport StockApi from \"apis/StockApi\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport RackApi from \"apis/RackApi\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport ReturnApi from \"apis/ReturnApi\";\r\n\r\nconst StockReturns = () => {\r\n  const user = useAuthUser();\r\n  console.log(user);\r\n  const [formData, setFormData] = React.useState({\r\n    shelfCode: \"\",\r\n    productBarcode: \"\",\r\n    quantity: \"\",\r\n    comment: \"\",\r\n    requestCode: \"\",\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [TaggingId, setTaggingId] = React.useState();\r\n  const [items, setItems] = React.useState([]);\r\n  const [RequestCode, setRequestCode] = React.useState();\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  // StoreStocks\r\n  const getRacksQueryResult = RackApi.useGetRackQuery({});\r\n  const rack = getRacksQueryResult?.data || [];\r\n\r\n  const getShelvesByRackQueryResult = RackApi.useGetShelvesByRackIdQuery({\r\n    id: formData.rack,\r\n  });\r\n  const shelvesByRack = getShelvesByRackQueryResult?.data || [];\r\n\r\n  const getProductsQuery = UserApi.useGetStoreProductsQuery({ TaggingId });\r\n  const products = getProductsQuery?.data || [];\r\n\r\n  const [stockOutboundMuation, stockOutboundMutationResult] =\r\n    ReturnApi.useReturnStockMutation();\r\n\r\n  const getRequestsQueryResult = ReqApi.useGetRequestQuery({\r\n    // TaggingId,\r\n  });\r\n  const requests = getRequestsQueryResult?.data || [];\r\n\r\n  const getRequestsDetailsQueryResult = ReqApi.useGetRequestDetailQuery({\r\n    RequestCode,\r\n  });\r\n  const requestsDetails = getRequestsDetailsQueryResult?.data || [];\r\n\r\n  // setFormData({requestCode:requestsDetails?.request?.code})\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: \"\",\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: \"\",\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const dataApproval = [\r\n    { store: \"Store A\", dateCreated: \"2023-01-15\", items: 50 },\r\n    { store: \"Store B\", dateCreated: \"2023-02-10\", items: 30 },\r\n    { store: \"Store C\", dateCreated: \"2023-03-05\", items: 70 },\r\n    // Add more data entries here\r\n  ];\r\n\r\n  const postOutbound = async () => {\r\n    let payload = {\r\n      requestCode: RequestCode,\r\n      reason: +formData.reason,\r\n      note: formData.comment,\r\n      items: [\r\n        ...items,\r\n        // {\r\n        //   productId: 1373,\r\n        //   shelfId: 91,\r\n        //   quantity: 12,\r\n        // },\r\n      ],\r\n    };\r\n    // {\r\n    //   shelfCode: formData.shelfCode,\r\n    //   requestCode: requestsDetails?.request?.code,\r\n    //   comment: formData.comment,\r\n    //   items: items,\r\n    // };\r\n\r\n    console.log(payload);\r\n    try {\r\n      const data = await stockOutboundMuation({ data: payload }).unwrap();\r\n      // TODO extra login\r\n      console.log(data);\r\n      data.message\r\n        ? enqueueSnackbar(data.message, { variant: \"error\" })\r\n        : enqueueSnackbar(\"Returned successfully\", { variant: \"success\" });\r\n      // setRefreshD((orev)=>orev+1)\r\n      // redirect();\r\n    } catch (error) {\r\n      console.log(error.data);\r\n      enqueueSnackbar(error?.data, \"\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  let id = 0;\r\n  const addItem = () => {\r\n    id = id + 1;\r\n    let payload = {\r\n      id: items.length + 1,\r\n      productId: +formData.productId,\r\n      quantity: +formData.quantity,\r\n      shelfId: formData.shelfCode,\r\n    };\r\n\r\n    console.log(payload);\r\n\r\n    // {\r\n    //   productId: 1373,\r\n    //   shelfId: 91,\r\n    //   quantity: 12,\r\n    // },\r\n\r\n    let cow = [];\r\n    cow = [...cow, payload];\r\n\r\n    formData.productId && formData.quantity\r\n      ? setItems([...items, payload])\r\n      : enqueueSnackbar(\"Please make sure all fields are duefully filled\", {\r\n          variant: \"error\",\r\n        });\r\n  };\r\n  console.log(items);\r\n\r\n  const removeItem = (toremove) => {\r\n    const remove = items.filter((item) => item.id !== toremove.id);\r\n\r\n    setItems(remove);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5\" variant=\"h4\">\r\n        Stock Return\r\n      </Typography>\r\n      <div className=\"flex gap-6\">\r\n        <Card title=\"\" className=\"px-8 py-4 w-full bg-black rounded-2xl\">\r\n          <div className=\"flex gap-8\">\r\n            <form className=\"flex flex-col gap-4 w-2/5\" onSubmit={handleSubmit}>\r\n              <div>\r\n                <Typography className=\"text-white\">\r\n                  Reason for Stock Return\r\n                </Typography>\r\n                <FormControl fullWidth>\r\n                  {/* <InputLabel>Select Field</InputLabel> */}\r\n                  <Select\r\n                    className=\"bg-white\"\r\n                    name=\"reason\"\r\n                    value={formData.reason}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <select\r\n                      class=\"form-control\"\r\n                      data-val=\"true\"\r\n                      data-val-required=\"Please specify reason.\"\r\n                      id=\"Reason\"\r\n                      name=\"Reason\"\r\n                    ></select>\r\n                    <MenuItem value=\"0\">Surplus</MenuItem>\r\n                    <MenuItem value=\"1\">WrongRequest</MenuItem>\r\n                    <MenuItem value=\"2\">Faulty</MenuItem>\r\n                    <MenuItem value=\"3\">Unsable</MenuItem>\r\n                    <MenuItem value=\"4\">CriticalNeed</MenuItem>\r\n                    <MenuItem value=\"5\">Repair</MenuItem>\r\n                    <MenuItem value=\"6\">ReAllocation</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div>\r\n                <Typography className=\"text-white\">\r\n                  HQ return or Local Store Return\r\n                </Typography>\r\n                <FormControl fullWidth>\r\n                  {/* <InputLabel>Select Field</InputLabel> */}\r\n                  <Select\r\n                    className=\"bg-white\"\r\n                    name=\"store\"\r\n                    value={formData.store}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"\">Please select a destination</MenuItem>\r\n                    <MenuItem value=\"1\">HQ return</MenuItem>\r\n                    <MenuItem value=\"0\">Local Store return</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className=\"w-full\">\r\n                <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                  Select Request Code\r\n                </Typography>\r\n                <FormControl className=\"w-full\" fullWidth>\r\n                  <Select\r\n                    className=\"bg-white w-full\"\r\n                    name=\"reqCode\"\r\n                    value={formData.reqCode}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setRequestCode(e.target.value);\r\n                    }}\r\n                  >\r\n                    {requests\r\n                      ?.filter(\r\n                        (req) =>\r\n                          req.status == 6 && user?.locationId == req?.locationId\r\n                      )\r\n                      ?.map((e) => (\r\n                        <MenuItem value={e?.code}>{e?.code}</MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className=\" gap-4\">\r\n                <Typography className=\"text-white\">\r\n                  Please enter comments\r\n                </Typography>\r\n                <TextareaAutosize\r\n                  className=\"rounded p-3 text-black\"\r\n                  name=\"comment\"\r\n                  minRows={5} // Minimum number of rows to display\r\n                  maxRows={6} // Maximum number of rows to display before scrolling\r\n                  placeholder=\"Enter your text here...\"\r\n                  onChange={handleChange}\r\n                  value={formData.comment}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n              <Button onClick={postOutbound}>Post</Button>\r\n            </form>\r\n\r\n            <div className=\"flex flex-col gap-4 w-3/5\">\r\n              <Typography className=\"text-white\" variant=\"h6\">\r\n                Please select Items to return\r\n              </Typography>\r\n              <Typography className=\"text-white\">\r\n                Scanned items valid for return will be listed below. Stock items\r\n                will be listed based on destination selected. Stock will be\r\n                returned to project type it was created in.\r\n              </Typography>\r\n              <Typography className=\"text-white\">\r\n                For HQ return the item must be in the BU store with stock status\r\n                ‘In-Store’ (Items already taken into the BU store).\r\n                {/* While for\r\n                local store return, the item must be authorized (SRIN status\r\n                must have been completed) only scanned items matching this\r\n                criteria will be displayed */}\r\n              </Typography>\r\n              <div className=\"flex gap-6\">\r\n                <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Rack\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      {/* <InputLabel>Select Field</InputLabel> */}\r\n                      <Autocomplete\r\n                        className=\"m-2\"\r\n                        disablePortal\r\n                        onChange={\r\n                          (event, newValue) =>\r\n                            // handleChange(event, newValue)\r\n                            setFormData({ ...formData, rack: newValue?.id })\r\n                          // console.log(newValue)\r\n                        }\r\n                        // id=\"combo-box-demo\"\r\n                        options={rack?.map((e) => ({\r\n                          label: e?.name,\r\n                          id: e?.id,\r\n                        }))}\r\n                        sx={{ minWidth: 200 }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Shelf\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      <Autocomplete\r\n                        className=\"m-2\"\r\n                        disablePortal\r\n                        onChange={\r\n                          (event, newValue) =>\r\n                            // handleChange(event, newValue)\r\n                            setFormData({\r\n                              ...formData,\r\n                              shelfCode: newValue?.id,\r\n                            })\r\n                          // console.log(newValue)\r\n                        }\r\n                        // id=\"combo-box-demo\"\r\n                        options={(shelvesByRack?.shelves || [])?.map((e) => ({\r\n                          label: e?.label,\r\n                          id: e?.id,\r\n                        }))}\r\n                        sx={{ minWidth: 200 }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Product\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      <Select\r\n                        className=\"bg-white w-full\"\r\n                        name=\"productId\"\r\n                        value={formData.productId}\r\n                        onChange={handleChange}\r\n                      >\r\n                        {requestsDetails?.requestedItems\r\n                          // {allDeliveries\r\n                          // ?.filter((item) =>\r\n                          //   products\r\n                          //     ?.filter(\r\n                          //       (barcodedProducts) => barcodedProducts.barcode\r\n                          //     )\r\n                          //     .some(\r\n                          //       (filterItem) =>\r\n                          //         filterItem?.id === item?.productId\r\n                          //     )\r\n                          // )\r\n                          // ?.filter((prod) => prod?.barcode)\r\n                          ?.map((e) => (\r\n                            <MenuItem\r\n                              value={\r\n                                products?.find(\r\n                                  (product) => e?.name === product?.name\r\n                                )?.id\r\n                              }\r\n                            >\r\n                              {e?.name}\r\n                              {/* {\r\n                                products?.find(\r\n                                  (product) => e?.productId === product?.id\r\n                                )?.name\r\n                              } */}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n                {/* <div className=\"flex justify-between gap-8 w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Select Product\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                    <Autocomplete\r\n                      className=\"m-2\"\r\n                      disablePortal\r\n                      onChange={\r\n                        (event, newValue) =>\r\n                          // handleChange(event, newValue)\r\n                          // setFormData({ ...formData, productId: newValue?.id })\r\n                        console.log(newValue)\r\n                      }\r\n                      // id=\"combo-box-demo\"\r\n                      options={(requestsDetails?.requestedItems||[])\r\n                        ?.map((e) => ({\r\n                          label: e?.name,\r\n                          id: e?. products?.find(\r\n                            (product) => e?.name === product?.name\r\n                          )?.id,\r\n                        }))}\r\n                      sx={{ minWidth: 200 }}\r\n                      renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                     \r\n                    </FormControl>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"flex justify-between gap-8  w-full\">\r\n                  <div className=\"w-full\">\r\n                    <Typography className=\"text-white mb-2 ml-3 w-full\">\r\n                      Quantity\r\n                    </Typography>\r\n                    <FormControl className=\"w-full\" fullWidth>\r\n                      {/* <InputLabel>Select Field</InputLabel> */}\r\n                      <TextField\r\n                        className=\"bg-white rounded-full\"\r\n                        // label=\"Field 1\"\r\n                        name=\"quantity\"\r\n                        value={formData.quantity}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        placeholder=\"Click to input Quantity\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <Button className=\"bg-red-500  text-white\">\r\n                Remove Selected Items\r\n              </Button> */}\r\n              <Button className=\"mt-4\" onClick={addItem}>\r\n                Add\r\n              </Button>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>#</TableCell>\r\n                      <TableCell>Product Barcode</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell>Shelf</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {items.map((row, idx) => (\r\n                      <TableRow key={idx}>\r\n                        <TableCell>{idx + 1}</TableCell>\r\n                        <TableCell>\r\n                          {\r\n                            products.find(\r\n                              (product) => product.id == row.productId\r\n                            ).name\r\n                          }\r\n                        </TableCell>\r\n                        <TableCell>{row.quantity}</TableCell>\r\n                        <TableCell>\r\n                          {\r\n                            shelvesByRack?.shelves.find(\r\n                              (shelf) => shelf.id == row.shelfId\r\n                            ).label\r\n                          }\r\n                        </TableCell>\r\n\r\n                        <TableCell\r\n                          onClick={() => removeItem(row)}\r\n                          className=\"text-red-400 cursor-pointer\"\r\n                        >\r\n                          Remove\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      // <div></div>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockReturns;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = '/tagging'\r\n\r\nexport const TaggingApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // signup: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/signup`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    tagging: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getTagging: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAwaitingTaggingApprovals: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Awaiting-Tagging-Approvals`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n    getPendingStockDetail: builder.query({\r\n      query: (arg) => {\r\n        const { TaggingId } = arg;\r\n        console.log(TaggingId);\r\n        return {\r\n          url: `${BASE_URL}/Get-PendingStock-Detail`,\r\n          method: \"GET\",\r\n          params: { TaggingId },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getApprovedStockTaggging: builder.query({\r\n      query: (arg) => {\r\n        const { userType, pageNo } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getalluser`,\r\n          method: \"GET\",\r\n          params: { userType, pageNo },\r\n        };\r\n      },\r\n    }),\r\n    getAllVerified: builder.query({\r\n      query: (arg) => {\r\n        const { userType, verified, pageNo } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getBothVerifiedUnverifiedUsers`,\r\n          method: \"GET\",\r\n          params: { userType, verified },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAllCompanyRiders: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getalluser`,\r\n          method: \"GET\",\r\n          params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAllCompanyCustomers: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/company/getalluser`,\r\n          method: \"GET\",\r\n          params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getAllTrips: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/super-admin/getAllTripRequest`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    // getAllRidersForCompany: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userId } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getallriderscompany`,\r\n    //       method: \"GET\",\r\n    //       params: { userId },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    getStats: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/super-admin/userStatsChart`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default TaggingApi;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport { Card, Divider, Typography } from \"@mui/material\";\r\nimport TaggingApi from \"apis/TaggingApi\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst StockTagging = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [formData, setFormData] = React.useState({\r\n    field1: \"\",\r\n    field2: \"\",\r\n    field3: \"\",\r\n    field4: \"\",\r\n    field5: \"\",\r\n    field6: \"\",\r\n    selectField: \"\",\r\n  });\r\n\r\n  const [itemId, setItemId] = React.useState();\r\n  const [receivingStoreId, setreceivingStoreId] = React.useState();\r\n  const [unit, setunitId] = React.useState(0);\r\n  const [deliveryItemId, setdeliveryItemId] = React.useState();\r\n\r\n  const [taggingMuation, taggingMutationResult] =\r\n    TaggingApi.useTaggingMutation();\r\n\r\n  const getTaggingQueryResult = TaggingApi.useGetTaggingQuery({});\r\n  const taggingResult = getTaggingQueryResult?.data;\r\n\r\n  const getItemDetailQueryResult = TaggingApi.useGetItemDetailQuery({ itemId });\r\n  const ItemDetail = getItemDetailQueryResult?.data;\r\n\r\n  // getItemDetail\r\n\r\n  const getStoreTaggingDetailQueryResult =\r\n    UserApi.useGetStoreTaggingDetailQuery({\r\n      deliveryItemId: ItemDetail?.id,\r\n      unit,\r\n    });\r\n  const StoreTaggingDetailResult = getStoreTaggingDetailQueryResult?.data;\r\n\r\n  console.log(StoreTaggingDetailResult);\r\n  // setdeliveryItemId(ItemDetail.id)\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: \"Value 1\",\r\n      column2: \"Value 2\",\r\n      column3: \"Value 3\",\r\n      column4: \"Value 4\",\r\n      column5: \"Value 5\",\r\n      column6: \"Value 5\",\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: \"Value 6\",\r\n      column2: \"Value 7\",\r\n      column3: \"Value 8\",\r\n      column4: \"Value 9\",\r\n      column5: \"Value 10\",\r\n      column6: \"Value 5\",\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n\r\n    if (name == \"productId\") setItemId(value);\r\n    if (name == \"reccivingStoreId\") {\r\n      console.log(value);\r\n      setreceivingStoreId(value);\r\n    }\r\n    // setreceivingStoreId\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    let payload = {\r\n      deliveryItemId: ItemDetail?.id,\r\n      quantity: StoreTaggingDetailResult?.quantity,\r\n      storeId: +receivingStoreId,\r\n      userId: 0,\r\n      projectId: null,\r\n      projectType: 1,\r\n      taggingType: 2,\r\n    };\r\n\r\n    try {\r\n      const data = await taggingMuation({ data: payload }).unwrap();\r\n      // TODO extra login\r\n      enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      // redirect();\r\n    } catch (error) {\r\n      enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n    // e.preventDefault();\r\n    // Handle form submission with formData\r\n  };\r\n  const KeyValueRow = ({ label, value }) => {\r\n    return (\r\n      <div className=\"flex justify-between text-white bg-black \">\r\n        <Typography className=\" border-b-2 w-full px-3 py-1\">\r\n          {label}\r\n        </Typography>\r\n        <Typography\r\n          className=\"w-full text-right border-b-2 px-3 py-1\"\r\n          variant=\"\"\r\n        >\r\n          {value}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5\" variant=\"h4\">\r\n        Stock Tagging\r\n      </Typography>\r\n      <div className=\"flex gap-6\">\r\n        <Card title=\"\" className=\"px-8 py-4 w-3/5 bg-black rounded-2xl pb-40\">\r\n          <div>\r\n            <Typography className=\" text-left text-white\">\r\n              Item & Store Detail\r\n            </Typography>\r\n            <Divider\r\n              sx={{ color: \"white\" }}\r\n              className=\"text-white bg-white mb-2\"\r\n            />\r\n          </div>\r\n          <form className=\"flex flex-col gap-4\" onSubmit={handleSubmit}>\r\n            <div className=\"flex gap-4\">\r\n              <FormControl fullWidth>\r\n                <label className=\"text-white\">Item Detail</label>\r\n                <Select\r\n                  square\r\n                  className=\"bg-white\"\r\n                  name=\"productId\"\r\n                  value={formData.productId}\r\n                  onChange={handleChange}\r\n                >\r\n                  {taggingResult?.deliveryItems?.map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl fullWidth>\r\n                <label className=\"text-white\">Receiving Store</label>\r\n                <Select\r\n                  square\r\n                  className=\"bg-white\"\r\n                  name=\"reccivingStoreId\"\r\n                  value={formData.productId}\r\n                  onChange={handleChange}\r\n                >\r\n                  {taggingResult?.receivingStores?.map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </form>\r\n          <div className=\"mt-4\">\r\n            <Typography className=\" text-left text-white\">\r\n              Unit Specification\r\n            </Typography>\r\n            <Divider\r\n              sx={{ color: \"white\" }}\r\n              className=\"text-white bg-white mb-2\"\r\n            />\r\n          </div>\r\n          <div class=\"mt-12\">\r\n            <Typography className=\"text-white mb-1\">\r\n              No of Items to tag\r\n            </Typography>\r\n            <div className=\"flex gap-4 items-center \">\r\n              <div className=\"text-white\">\r\n                <TextField\r\n                  className=\"bg-white rounded-full\"\r\n                  // label=\"Field 1\"\r\n                  name=\"field1\"\r\n                  value={formData.field1}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  placeholder=\"Click to input Price\"\r\n                />\r\n              </div>\r\n              <div className=\"flex gap-3\">\r\n                <div\r\n                  onClick={() => setunitId((prev) => prev + 1)}\r\n                  className=\"border cursor-pointer border-green-500\"\r\n                >\r\n                  <AddIcon className=\"text-green-500\" />\r\n                </div>{\" \"}\r\n                {/* Plus icon */}\r\n                <div\r\n                  onClick={() => setunitId((prev) => prev - 1)}\r\n                  className=\"border cursor-pointer border-red-500\"\r\n                >\r\n                  <RemoveIcon className=\"text-red-500\" />\r\n                </div>{\" \"}\r\n                {/* Minus icon */}\r\n              </div>\r\n              <div>\r\n                <Button onClick={handleSubmit}>Create Stock</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <Card\r\n          title=\"\"\r\n          className=\"px-8 py-4 w-2/5 bg-black rounded-2xl text-white\"\r\n        >\r\n          <div>\r\n            <Typography variant=\"h6\">Unit Details</Typography>\r\n            <Divider className=\"bg-white mb-1\"></Divider>\r\n            <Divider className=\"bg-white mb-1\"></Divider>\r\n            <div>\r\n              <KeyValueRow\r\n                label=\"Unit Per Pack\"\r\n                value={StoreTaggingDetailResult?.unit}\r\n              />\r\n              <KeyValueRow\r\n                label=\"Quantity\"\r\n                value={StoreTaggingDetailResult?.quantity}\r\n              />\r\n              <KeyValueRow\r\n                label=\"Total Item\"\r\n                value={StoreTaggingDetailResult?.total}\r\n              />\r\n              {/* <KeyValueRow label=\"Email\" value=\"johndoe@example.com\" />\r\n              <KeyValueRow label=\"Occupation\" value=\"Software Engineer\" /> */}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n            <Typography variant=\"h6\">Item Details</Typography>\r\n            <Divider className=\"bg-white mb-1\"></Divider>\r\n            <Divider className=\"bg-white mb-1\"></Divider>\r\n            <div>\r\n              <KeyValueRow\r\n                label=\"Produvt Name\"\r\n                value={ItemDetail?.productName}\r\n              />\r\n              {/* <KeyValueRow label=\"Unit Per Pack\" value={ItemDetail?.baseUnit} /> */}\r\n              <KeyValueRow\r\n                label=\"Quantity Available\"\r\n                value={ItemDetail?.total}\r\n              />\r\n              <KeyValueRow label=\"Total Item\" value={ItemDetail?.total} />\r\n              {/* <KeyValueRow label=\"Email\" value=\"johndoe@example.com\" />\r\n              <KeyValueRow label=\"Occupation\" value=\"Software Engineer\" /> */}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockTagging;\r\n"],"names":["BASE_URL","SoftwrkApi","endpoints","builder","returnStock","mutation","query","config","url","concat","method","returnIntake","getStocksReturning","arg","userType","_ref","image","text1","text2","showText","makebig","age","setAge","React","enqueueSnackbar","useNavigate","useAuthUser","useSnackbar","loginMuation","loginMutationResult","UserApi","_jsx","className","children","Card","CardContent","class","_jsxs","src","alt","Typography","variant","props","error","rest","isVisible","setVisible","handleVisible","p","TextField","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","disabled","Icon","clsx","VisibilityOffIcon","VisibilityIcon","cookies","Cookies","axiosConn","axios","baseURL","process","console","log","get","interceptors","request","use","headers","Authorization","Promise","reject","setUserType","show","setshow","dataType","setdataType","filtered","setFiltered","WatermarkSVGImage","DashboardStatisticsCard","Link","to","RouteEnum","DashboardCards","WarehouseSVGImage","InventorySVGImage","ShipmentSVGImage","SystemAdminSVGImage","DashboardSVGImage","DocumentationSVGImage","data","header","dataSource","useEffect","columns","map","e","title","toUpperCase","dataIndex","toLowerCase","key","Button","exportToExcel","ws","XLSX","column","t","v","s","font","bold","record","wb","IllegalMovement","formData","setFormData","field1","field2","field3","field4","field5","field6","selectField","id","column1","Checkbox","column2","column3","column4","column5","column6","column7","column8","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","IssueCancellation","PartialIssuance","handleChange","event","name","value","target","onSubmit","preventDefault","FormControl","fullWidth","InputLabel","Select","onChange","MenuItem","color","PendingStock","getVendors","getCategories","getAllBikes","pageNo","params","getAll","getAllVerified","verified","getAllCompanyRiders","getAllCompanyCustomers","getAllTrips","getStats","StockDeliveries","refreshD","setRefreshD","useState","itemz","setItemz","isLoading","setIsLoading","getStoreProductsQueryResult","products","getTempDeliveriesQueryResult","DeliveryApi","tempDeliveries","getVendorQueryResult","VendorApi","useGetVendorsQuery","vendor","stockDeliveryMuation","stockDeliveryMutationResult","stockDiscardMuation","stockDiscardMutationResult","finalDeliveryMuation","finalDeliveryMutationResult","userId","productId","unitCost","quantity","waybill","workOrder","vendorId","newValue","setNewValue","newValueProduct","setNewValueProduct","redirect","Autocomplete","disablePortal","options","label","sx","minWidth","renderInput","placeholder","async","payload","find","productName","DatePicker","selected","date","workOrderNo","purchaseId","items","length","unwrap","temp","filter","toDeleteProduct","StockReturns","_requests$filter","_requestsDetails$requ","user","shelfCode","productBarcode","comment","requestCode","TaggingId","setTaggingId","setItems","RequestCode","setRequestCode","setShow","getRacksQueryResult","RackApi","rack","getShelvesByRackQueryResult","shelvesByRack","getProductsQuery","stockOutboundMuation","stockOutboundMutationResult","ReturnApi","getRequestsQueryResult","ReqApi","requests","getRequestsDetailsQueryResult","requestsDetails","reason","store","reqCode","req","status","locationId","code","TextareaAutosize","minRows","maxRows","style","width","note","message","shelves","requestedItems","_products$find","product","addItem","shelfId","cow","idx","shelf","toremove","remove","item","removeItem","tagging","getTagging","getAwaitingTaggingApprovals","getPendingStockDetail","getApprovedStockTaggging","StockTagging","_taggingResult$delive","_taggingResult$receiv","itemId","setItemId","receivingStoreId","setreceivingStoreId","unit","setunitId","deliveryItemId","setdeliveryItemId","taggingMuation","taggingMutationResult","TaggingApi","getTaggingQueryResult","taggingResult","getItemDetailQueryResult","ItemDetail","getStoreTaggingDetailQueryResult","StoreTaggingDetailResult","handleSubmit","storeId","projectId","projectType","taggingType","_error$data","KeyValueRow","Divider","square","deliveryItems","description","receivingStores","prev","AddIcon","RemoveIcon","total"],"sourceRoot":""}