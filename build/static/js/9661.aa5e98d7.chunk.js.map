{"version":3,"file":"static/js/9661.aa5e98d7.chunk.js","mappings":"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","sources":["apis/RackApi.js","apis/ReqApi.js","apis/StockApi.js","features/stock/ConfirmRelease.js","../node_modules/@mui/icons-material/esm/ArrowBackTwoTone.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js"],"sourcesContent":["import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/rack\";\r\n\r\nexport const UserApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // receiveStock: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/Receive-Stock`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    productRack: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Product-Rack`,\r\n        method: \"PUT\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    createRacks: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getRack: builder.query({\r\n      query: (arg) => {\r\n        const { reloadItems } = arg;\r\n        return {\r\n          url: `${BASE_URL}`,\r\n          method: \"GET\",\r\n          // params: { reloadItems },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getRackShelves: builder.query({\r\n      query: (arg) => {\r\n        const { reloadItems } = arg;\r\n        return {\r\n          url: `${BASE_URL}/shelves`,\r\n          method: \"GET\",\r\n          // params: { reloadItems },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getShelvesByRackId: builder.query({\r\n      query: (arg) => {\r\n        const { id } = arg;\r\n        return {\r\n          url: `${BASE_URL}/${id}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getShelves: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/shelves`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n    getProductsByRack: builder.query({\r\n      query: (arg) => {\r\n        const { RackId } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Rack-Products/${RackId}`,\r\n          method: \"GET\",\r\n          // params: { RackId },\r\n        };\r\n      },\r\n    }),\r\n\r\n    // getStoreStock: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/products`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreTaggingDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { deliveryItemId, unit } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/get-taggingDetail`,\r\n    //       method: \"GET\",\r\n    //       params: {  deliveryItemId, unit },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getTempStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-TmpStocks`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getItemDetail: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { itemId } = arg;\r\n    //     // console.log(pageNo);\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-ItemDetails/${itemId}/`,\r\n    //       method: \"GET\",\r\n    //       // params: { pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getStoreStocks: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType, pageNo } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Store-Stocks`,\r\n    //       method: \"GET\",\r\n    //       params: { userType, pageNo },\r\n    //     };\r\n    //   },\r\n    // }),\r\n    // getGlobalBin: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-Global-Bincard`,\r\n    //       method: \"GET\",\r\n    //       // param nas: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getBinCard: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { ProjectType, Location} = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/Get-BinCard`,\r\n    //       method: \"GET\",\r\n    //       params: {  ProjectType, Location },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyRiders: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllCompanyCustomers: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/company/getalluser`,\r\n    //       method: \"GET\",\r\n    //       params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllTrips: builder.query({\r\n    //   query: (arg) => {\r\n    //     // const { userType } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getAllTripRequest`,\r\n    //       method: \"GET\",\r\n    //       // params: { userType },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    // getAllRidersForCompany: builder.query({\r\n    //   query: (arg) => {\r\n    //     const { userId } = arg;\r\n    //     return {\r\n    //       url: `${BASE_URL}/super-admin/getallriderscompany`,\r\n    //       method: \"GET\",\r\n    //       params: { userId },\r\n    //     };\r\n    //   },\r\n    // }),\r\n\r\n    getStats: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/super-admin/userStatsChart`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default UserApi;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/req\";\r\n\r\nexport const ReqApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    confirmRelease: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/confirm-release`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    approval: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/approval`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    request: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/request`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getRequest: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getRequestDetail: builder.query({\r\n      query: (arg) => {\r\n        const { RequestCode } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Request-Detail/${RequestCode}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getReleasedStocks: builder.query({\r\n      query: (arg) => {\r\n        const { RequestCode } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Released-Stocks/${RequestCode}`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n   \r\n\r\n    getTagging: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getPendingRelease: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Pending-Release`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getProcessedApprovalRequest: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/Get-Processed-Approval-Requests`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n\r\n    getCategories: builder.query({\r\n      query: (arg) => {\r\n        const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/category`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default ReqApi;\r\n","import { SoftwrkApi } from \"configs/StoreQueryConfig\";\r\n\r\nconst BASE_URL = \"/stocks\";\r\n\r\nexport const StockApi = SoftwrkApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // signup: builder.mutation({\r\n    //   query: (config) => ({\r\n    //     url: `${BASE_URL}/signup`,\r\n    //     method: \"POST\",\r\n    //     ...config,\r\n    //   }),\r\n    // }),\r\n    stockIntake: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/intake`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    stockTransferIntake: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Transfer-Intake`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n    stockOutbound: builder.mutation({\r\n      query: (config) => ({\r\n        url: `${BASE_URL}/Outbound`,\r\n        method: \"POST\",\r\n        ...config,\r\n      }),\r\n    }),\r\n\r\n    getIntakes: builder.query({\r\n      query: (arg) => {\r\n        // const { userType } = arg;\r\n        return {\r\n          url: `${BASE_URL}/intakes`,\r\n          method: \"GET\",\r\n          // params: { userType },\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n// ;\r\n\r\nexport default StockApi;\r\n","import React, { useEffect } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Card, Typography } from \"@mui/material\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport StockApi from \"apis/StockApi\";\r\nimport RackApi from \"apis/RackApi\";\r\nimport ReqApi from \"apis/ReqApi\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { ArrowBackTwoTone, BackspaceTwoTone } from \"@mui/icons-material\";\r\nimport { toggleLoadingModalAction } from \"configs/StoreSliceConfig\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ConfirmRelease = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formData, setFormData] = React.useState({\r\n    shelfCode: \"\",\r\n    productBarcode: \"\",\r\n    quantity: \"\",\r\n    comment: \"\",\r\n    requestCode: \"\",\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [TaggingId, setTaggingId] = React.useState(0);\r\n  const [items, setItems] = React.useState([]);\r\n  const [RequestCode, setRequestCode] = React.useState();\r\n  const [requestObj, setrequestObj] = React.useState();\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  // StoreStocks\r\n\r\n  const [stockConfirmReleaseMuation, stockConfirmReleaseMutationResult] =\r\n    ReqApi.useConfirmReleaseMutation();\r\n\r\n  const getRequestsQueryResult = ReqApi.useGetRequestQuery({\r\n    TaggingId,\r\n  });\r\n  const requests = getRequestsQueryResult?.data;\r\n\r\n  const getRequestsDetailsQueryResult = ReqApi.useGetRequestDetailQuery({\r\n    RequestCode,\r\n  });\r\n  const requestsDetails = getRequestsDetailsQueryResult?.data;\r\n\r\n  // setFormData({requestCode:requestsDetails?.request?.code})\r\n\r\n  const [receiveStockMuation, receiveStockMutationResult] =\r\n    UserApi.useReceiveStockMutation();\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      column1: \"\",\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      column1: \"\",\r\n      column2: \"\",\r\n      column3: \"\",\r\n      column4: \"\",\r\n      column5: \"\",\r\n      column6: \"\",\r\n    },\r\n    // Add more data as needed\r\n  ];\r\n\r\n  const dataApproval = [\r\n    { store: \"Store A\", dateCreated: \"2023-01-15\", items: 50 },\r\n    { store: \"Store B\", dateCreated: \"2023-02-10\", items: 30 },\r\n    { store: \"Store C\", dateCreated: \"2023-03-05\", items: 70 },\r\n    // Add more data entries here\r\n  ];\r\n\r\n  const postOutbound = async (RequestCode) => {\r\n    let payload = {\r\n      requestId: RequestCode,\r\n    };\r\n\r\n    console.log(payload);\r\n    try {\r\n      const data = await stockConfirmReleaseMuation({ data: payload }).unwrap();\r\n      // TODO extra login\r\n      // console.log(data.data);\r\n      setTaggingId((prev) => prev + 1);\r\n      enqueueSnackbar(\"Release Confirmed Successfully\", { variant: \"success\" });\r\n      // setRefreshD((orev)=>orev+1)\r\n      // redirect();\r\n    } catch (error) {\r\n      console.log(error);\r\n      enqueueSnackbar(error?.data, \"Failed to login\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  let id = 0;\r\n  const addItem = () => {\r\n    id = id + 1;\r\n    let payload = {\r\n      id: items.length + 1,\r\n      productBarcode: formData.productBarcode,\r\n      quantity: formData.quantity,\r\n    };\r\n\r\n    let cow = [];\r\n    cow = [...cow, payload];\r\n\r\n    setItems([...items, payload]);\r\n  };\r\n  console.log(items);\r\n\r\n  const removeItem = (toremove) => {\r\n    const remove = items.filter((item) => item.id !== toremove.id);\r\n\r\n    setItems(remove);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Handle form submission with formData\r\n  };\r\n\r\n  const catchRequestId = (row) => {\r\n    setRequestCode(row.code);\r\n    setrequestObj(row);\r\n    console.log(row.code);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"text-center font-bold my-5\" variant=\"h4\">\r\n        Material Acceptance\r\n      </Typography>\r\n\r\n      <Card className=\"p-5 bg-black text-white\">\r\n        <Paper elevation={3}>\r\n          {!show && (\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className=\"font-bold text-base\">#</TableCell>\r\n                    <TableCell className=\"font-bold text-base\">Code</TableCell>\r\n                    <TableCell className=\"font-bold text-base\">\r\n                      Message\r\n                    </TableCell>\r\n                    <TableCell className=\"font-bold text-base\">\r\n                      Requested By\r\n                    </TableCell>\r\n                    <TableCell className=\"font-bold text-base\">\r\n                      Released By\r\n                    </TableCell>\r\n                    <TableCell className=\"font-bold text-base\">\r\n                      Action\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {requests\r\n                    ?.filter((filtered) => filtered.status === 5)\r\n                    .map((row, idx) => (\r\n                      <TableRow key={row.id}>\r\n                        <TableCell>{idx + 1}</TableCell>\r\n                        <TableCell>{row.code}</TableCell>\r\n                        <TableCell>{row.message}</TableCell>\r\n                        <TableCell>{row.receiverId}</TableCell>\r\n                        <TableCell>{row.userId}</TableCell>\r\n                        <TableCell\r\n                          onClick={() => {\r\n                            catchRequestId(row);\r\n                            setShow(!show);\r\n                            // postOutbound(row?.id);\r\n                          }}\r\n                          className=\"text-red-400 cursor-pointer\"\r\n                        >\r\n                          Accept\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n\r\n          {show && (\r\n            <div className=\"text-white mt-8 bg-black px-[20%]\">\r\n              <div\r\n                className=\"flex items-center gap-1 text-white cursor-pointer\"\r\n                onClick={() => {\r\n                  setShow(!show);\r\n                }}\r\n              >\r\n                <ArrowBackTwoTone />\r\n                <Typography className=\"font-bold\">Back</Typography>\r\n              </div>\r\n              <Typography variant=\"h5\" className=\"font-bold mb-5 text-center\">\r\n                Requested Items\r\n              </Typography>\r\n              <div className=\"flex justify-between items-center text-white\">\r\n                <div className=\"text-white\">\r\n                  <p className=\"text-base font-bold\">Product</p>\r\n                  {/* <p className=\"text-white mt-1 text-center\">{e?.name}</p> */}\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-base font-bold\">Quantity</p>\r\n                  {/* <p className=\"text-white mt-1 text-center\">{e?.quantity}</p> */}\r\n                </div>\r\n              </div>\r\n              {requestsDetails?.requestedItems?.map((e) => (\r\n                <div className=\"flex justify-between items-center text-white\">\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-white mt-1 text-center\">{e?.name}</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-white mt-1 \">{e?.quantity}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              <Button\r\n              className=\"mt-3 w-full p-3\"\r\n                onClick={() => {\r\n                  postOutbound(requestObj?.id);\r\n                }}\r\n              >\r\n                Accept\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {/* requestsDetails */}\r\n        </Paper>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmRelease;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBackTwoTone');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["BASE_URL","SoftwrkApi","endpoints","builder","productRack","mutation","query","config","url","concat","method","createRacks","getRack","arg","reloadItems","getRackShelves","getShelvesByRackId","id","getShelves","userType","getProductsByRack","RackId","getStats","confirmRelease","approval","request","getRequest","getRequestDetail","RequestCode","getReleasedStocks","getTagging","getPendingRelease","getProcessedApprovalRequest","getCategories","stockIntake","stockTransferIntake","stockOutbound","getIntakes","ConfirmRelease","_requestsDetails$requ","useDispatch","formData","setFormData","React","shelfCode","productBarcode","quantity","comment","requestCode","enqueueSnackbar","useSnackbar","TaggingId","setTaggingId","items","setItems","setRequestCode","requestObj","setrequestObj","show","setShow","stockConfirmReleaseMuation","stockConfirmReleaseMutationResult","ReqApi","getRequestsQueryResult","requests","data","getRequestsDetailsQueryResult","requestsDetails","receiveStockMuation","receiveStockMutationResult","UserApi","console","log","_jsxs","children","_jsx","Typography","className","variant","Card","Paper","elevation","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","filter","filtered","status","map","row","idx","code","message","receiverId","userId","onClick","catchRequestId","ArrowBackTwoTone","requestedItems","e","name","Button","async","payload","requestId","unwrap","prev","error","postOutbound","createSvgIcon","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","undefined"],"sourceRoot":""}